{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://latex-resume-builder/./node_modules/glob-parent/index.js","webpack://latex-resume-builder/external node-commonjs \"util\"","webpack://latex-resume-builder/./node_modules/fill-range/index.js","webpack://latex-resume-builder/./node_modules/to-regex-range/index.js","webpack://latex-resume-builder/./node_modules/readdirp/index.js","webpack://latex-resume-builder/./node_modules/normalize-path/index.js","webpack://latex-resume-builder/./node_modules/chokidar/lib/nodefs-handler.js","webpack://latex-resume-builder/./node_modules/picomatch/lib/parse.js","webpack://latex-resume-builder/./node_modules/picomatch/index.js","webpack://latex-resume-builder/./node_modules/chokidar/index.js","webpack://latex-resume-builder/./node_modules/chokidar/lib/constants.js","webpack://latex-resume-builder/external node-commonjs \"stream\"","webpack://latex-resume-builder/./node_modules/picomatch/lib/utils.js","webpack://latex-resume-builder/external node-commonjs \"child_process\"","webpack://latex-resume-builder/./node_modules/is-extglob/index.js","webpack://latex-resume-builder/./node_modules/is-glob/index.js","webpack://latex-resume-builder/external commonjs \"vscode\"","webpack://latex-resume-builder/external node-commonjs \"events\"","webpack://latex-resume-builder/./node_modules/binary-extensions/index.js","webpack://latex-resume-builder/./node_modules/braces/index.js","webpack://latex-resume-builder/./node_modules/anymatch/index.js","webpack://latex-resume-builder/./node_modules/braces/lib/parse.js","webpack://latex-resume-builder/./node_modules/picomatch/lib/scan.js","webpack://latex-resume-builder/./node_modules/braces/lib/utils.js","webpack://latex-resume-builder/./node_modules/picomatch/lib/picomatch.js","webpack://latex-resume-builder/./node_modules/braces/lib/expand.js","webpack://latex-resume-builder/./node_modules/braces/lib/compile.js","webpack://latex-resume-builder/./node_modules/braces/lib/stringify.js","webpack://latex-resume-builder/./node_modules/braces/lib/constants.js","webpack://latex-resume-builder/./node_modules/is-binary-path/index.js","webpack://latex-resume-builder/external node-commonjs \"os\"","webpack://latex-resume-builder/external node-commonjs \"fs\"","webpack://latex-resume-builder/external node-commonjs \"path\"","webpack://latex-resume-builder/./node_modules/is-number/index.js","webpack://latex-resume-builder/./node_modules/picomatch/lib/constants.js","webpack://latex-resume-builder/./node_modules/chokidar/lib/fsevents-handler.js","webpack://latex-resume-builder/webpack/bootstrap","webpack://latex-resume-builder/./src/extension.ts"],"sourcesContent":["'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n","module.exports = require(\"util\");","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options, maxLen) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.map(v => toMaxLen(String(v), maxLen)).join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.map(v => toMaxLen(String(v), maxLen)).join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options, maxLen)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","'use strict';\n\nconst fs = require('fs');\nconst { Readable } = require('stream');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst picomatch = require('picomatch');\n\nconst readdir = promisify(fs.readdir);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\n/**\n * @typedef {Object} EntryInfo\n * @property {String} path\n * @property {String} fullPath\n * @property {fs.Stats=} stats\n * @property {fs.Dirent=} dirent\n * @property {String} basename\n */\n\nconst BANG = '!';\nconst RECURSIVE_ERROR_CODE = 'READDIRP_RECURSIVE_ERROR';\nconst NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP', RECURSIVE_ERROR_CODE]);\nconst FILE_TYPE = 'files';\nconst DIR_TYPE = 'directories';\nconst FILE_DIR_TYPE = 'files_directories';\nconst EVERYTHING_TYPE = 'all';\nconst ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];\n\nconst isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);\nconst [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));\nconst wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));\n\nconst normalizeFilter = filter => {\n  if (filter === undefined) return;\n  if (typeof filter === 'function') return filter;\n\n  if (typeof filter === 'string') {\n    const glob = picomatch(filter.trim());\n    return entry => glob(entry.basename);\n  }\n\n  if (Array.isArray(filter)) {\n    const positive = [];\n    const negative = [];\n    for (const item of filter) {\n      const trimmed = item.trim();\n      if (trimmed.charAt(0) === BANG) {\n        negative.push(picomatch(trimmed.slice(1)));\n      } else {\n        positive.push(picomatch(trimmed));\n      }\n    }\n\n    if (negative.length > 0) {\n      if (positive.length > 0) {\n        return entry =>\n          positive.some(f => f(entry.basename)) && !negative.some(f => f(entry.basename));\n      }\n      return entry => !negative.some(f => f(entry.basename));\n    }\n    return entry => positive.some(f => f(entry.basename));\n  }\n};\n\nclass ReaddirpStream extends Readable {\n  static get defaultOptions() {\n    return {\n      root: '.',\n      /* eslint-disable no-unused-vars */\n      fileFilter: (path) => true,\n      directoryFilter: (path) => true,\n      /* eslint-enable no-unused-vars */\n      type: FILE_TYPE,\n      lstat: false,\n      depth: 2147483648,\n      alwaysStat: false\n    };\n  }\n\n  constructor(options = {}) {\n    super({\n      objectMode: true,\n      autoDestroy: true,\n      highWaterMark: options.highWaterMark || 4096\n    });\n    const opts = { ...ReaddirpStream.defaultOptions, ...options };\n    const { root, type } = opts;\n\n    this._fileFilter = normalizeFilter(opts.fileFilter);\n    this._directoryFilter = normalizeFilter(opts.directoryFilter);\n\n    const statMethod = opts.lstat ? lstat : stat;\n    // Use bigint stats if it's windows and stat() supports options (node 10+).\n    if (wantBigintFsStats) {\n      this._stat = path => statMethod(path, { bigint: true });\n    } else {\n      this._stat = statMethod;\n    }\n\n    this._maxDepth = opts.depth;\n    this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsEverything = type === EVERYTHING_TYPE;\n    this._root = sysPath.resolve(root);\n    this._isDirent = ('Dirent' in fs) && !opts.alwaysStat;\n    this._statsProp = this._isDirent ? 'dirent' : 'stats';\n    this._rdOptions = { encoding: 'utf8', withFileTypes: this._isDirent };\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  }\n\n  async _read(batch) {\n    if (this.reading) return;\n    this.reading = true;\n\n    try {\n      while (!this.destroyed && batch > 0) {\n        const { path, depth, files = [] } = this.parent || {};\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) {\n                this.push(entry);\n                batch--;\n              }\n            } else if ((entryType === 'file' || this._includeAsFile(entry)) && this._fileFilter(entry)) {\n              if (this._wantsFile) {\n                this.push(entry);\n                batch--;\n              }\n            }\n          }\n        } else {\n          const parent = this.parents.pop();\n          if (!parent) {\n            this.push(null);\n            break;\n          }\n          this.parent = await parent;\n          if (this.destroyed) return;\n        }\n      }\n    } catch (error) {\n      this.destroy(error);\n    } finally {\n      this.reading = false;\n    }\n  }\n\n  async _exploreDir(path, depth) {\n    let files;\n    try {\n      files = await readdir(path, this._rdOptions);\n    } catch (error) {\n      this._onError(error);\n    }\n    return { files, depth, path };\n  }\n\n  async _formatEntry(dirent, path) {\n    let entry;\n    try {\n      const basename = this._isDirent ? dirent.name : dirent;\n      const fullPath = sysPath.resolve(sysPath.join(path, basename));\n      entry = { path: sysPath.relative(this._root, fullPath), fullPath, basename };\n      entry[this._statsProp] = this._isDirent ? dirent : await this._stat(fullPath);\n    } catch (err) {\n      this._onError(err);\n    }\n    return entry;\n  }\n\n  _onError(err) {\n    if (isNormalFlowError(err) && !this.destroyed) {\n      this.emit('warn', err);\n    } else {\n      this.destroy(err);\n    }\n  }\n\n  async _getEntryType(entry) {\n    // entry may be undefined, because a warning or an error were emitted\n    // and the statsProp is undefined\n    const stats = entry && entry[this._statsProp];\n    if (!stats) {\n      return;\n    }\n    if (stats.isFile()) {\n      return 'file';\n    }\n    if (stats.isDirectory()) {\n      return 'directory';\n    }\n    if (stats && stats.isSymbolicLink()) {\n      const full = entry.fullPath;\n      try {\n        const entryRealPath = await realpath(full);\n        const entryRealPathStats = await lstat(entryRealPath);\n        if (entryRealPathStats.isFile()) {\n          return 'file';\n        }\n        if (entryRealPathStats.isDirectory()) {\n          const len = entryRealPath.length;\n          if (full.startsWith(entryRealPath) && full.substr(len, 1) === sysPath.sep) {\n            const recursiveError = new Error(\n              `Circular symlink detected: \"${full}\" points to \"${entryRealPath}\"`\n            );\n            recursiveError.code = RECURSIVE_ERROR_CODE;\n            return this._onError(recursiveError);\n          }\n          return 'directory';\n        }\n      } catch (error) {\n        this._onError(error);\n      }\n    }\n  }\n\n  _includeAsFile(entry) {\n    const stats = entry && entry[this._statsProp];\n\n    return stats && this._wantsEverything && !stats.isDirectory();\n  }\n}\n\n/**\n * @typedef {Object} ReaddirpArguments\n * @property {Function=} fileFilter\n * @property {Function=} directoryFilter\n * @property {String=} type\n * @property {Number=} depth\n * @property {String=} root\n * @property {Boolean=} lstat\n * @property {Boolean=} bigint\n */\n\n/**\n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param {String} root Root directory\n * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth\n */\nconst readdirp = (root, options = {}) => {\n  let type = options.entryType || options.type;\n  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility\n  if (type) options.type = type;\n  if (!root) {\n    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');\n  } else if (typeof root !== 'string') {\n    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');\n  } else if (type && !ALL_TYPES.includes(type)) {\n    throw new Error(`readdirp: Invalid type passed. Use one of ${ALL_TYPES.join(', ')}`);\n  }\n\n  options.root = root;\n  return new ReaddirpStream(options);\n};\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry))\n      .on('end', () => resolve(files))\n      .on('error', error => reject(error));\n  });\n};\n\nreaddirp.promise = readdirpPromise;\nreaddirp.ReaddirpStream = ReaddirpStream;\nreaddirp.default = readdirp;\n\nmodule.exports = readdirp;\n","/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n","'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst isBinaryPath = require('is-binary-path');\nconst {\n  isWindows,\n  isLinux,\n  EMPTY_FN,\n  EMPTY_STR,\n  KEY_LISTENERS,\n  KEY_ERR,\n  KEY_RAW,\n  HANDLER_KEYS,\n  EV_CHANGE,\n  EV_ADD,\n  EV_ADD_DIR,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  BRACE_START,\n  STAR\n} = require('./constants');\n\nconst THROTTLE_MODE_WATCH = 'watch';\n\nconst open = promisify(fs.open);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst close = promisify(fs.close);\nconst fsrealpath = promisify(fs.realpath);\n\nconst statMethods = { lstat, stat };\n\n// TODO: emit errors properly. Example: EMFILE on Macos.\nconst foreach = (val, fn) => {\n  if (val instanceof Set) {\n    val.forEach(fn);\n  } else {\n    fn(val);\n  }\n};\n\nconst addAndConvert = (main, prop, item) => {\n  let container = main[prop];\n  if (!(container instanceof Set)) {\n    main[prop] = container = new Set([container]);\n  }\n  container.add(item);\n};\n\nconst clearItem = cont => key => {\n  const set = cont[key];\n  if (set instanceof Set) {\n    set.clear();\n  } else {\n    delete cont[key];\n  }\n};\n\nconst delFromSet = (main, prop, item) => {\n  const container = main[prop];\n  if (container instanceof Set) {\n    container.delete(item);\n  } else if (container === item) {\n    delete main[prop];\n  }\n};\n\nconst isEmptySet = (val) => val instanceof Set ? val.size === 0 : !val;\n\n/**\n * @typedef {String} Path\n */\n\n// fs_watch helpers\n\n// object to hold per-process fs_watch instances\n// (may be shared across chokidar FSWatcher instances)\n\n/**\n * @typedef {Object} FsWatchContainer\n * @property {Set} listeners\n * @property {Set} errHandlers\n * @property {Set} rawEmitters\n * @property {fs.FSWatcher=} watcher\n * @property {Boolean=} watcherUnusable\n */\n\n/**\n * @type {Map<String,FsWatchContainer>}\n */\nconst FsWatchInstances = new Map();\n\n/**\n * Instantiates the fs_watch interface\n * @param {String} path to be watched\n * @param {Object} options to be passed to fs_watch\n * @param {Function} listener main event handler\n * @param {Function} errHandler emits info about errors\n * @param {Function} emitRaw emits raw event data\n * @returns {fs.FSWatcher} new fsevents instance\n */\nfunction createFsWatchInstance(path, options, listener, errHandler, emitRaw) {\n  const handleEvent = (rawEvent, evPath) => {\n    listener(path);\n    emitRaw(rawEvent, evPath, {watchedPath: path});\n\n    // emit based on events occurring for files from a directory's watcher in\n    // case the file's watcher misses it (and rely on throttling to de-dupe)\n    if (evPath && path !== evPath) {\n      fsWatchBroadcast(\n        sysPath.resolve(path, evPath), KEY_LISTENERS, sysPath.join(path, evPath)\n      );\n    }\n  };\n  try {\n    return fs.watch(path, options, handleEvent);\n  } catch (error) {\n    errHandler(error);\n  }\n}\n\n/**\n * Helper for passing fs_watch event data to a collection of listeners\n * @param {Path} fullPath absolute path bound to fs_watch instance\n * @param {String} type listener type\n * @param {*=} val1 arguments to be passed to listeners\n * @param {*=} val2\n * @param {*=} val3\n */\nconst fsWatchBroadcast = (fullPath, type, val1, val2, val3) => {\n  const cont = FsWatchInstances.get(fullPath);\n  if (!cont) return;\n  foreach(cont[type], (listener) => {\n    listener(val1, val2, val3);\n  });\n};\n\n/**\n * Instantiates the fs_watch interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path\n * @param {String} fullPath absolute path\n * @param {Object} options to be passed to fs_watch\n * @param {Object} handlers container for event listener functions\n */\nconst setFsWatchListener = (path, fullPath, options, handlers) => {\n  const {listener, errHandler, rawEmitter} = handlers;\n  let cont = FsWatchInstances.get(fullPath);\n\n  /** @type {fs.FSWatcher=} */\n  let watcher;\n  if (!options.persistent) {\n    watcher = createFsWatchInstance(\n      path, options, listener, errHandler, rawEmitter\n    );\n    return watcher.close.bind(watcher);\n  }\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_ERR, errHandler);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    watcher = createFsWatchInstance(\n      path,\n      options,\n      fsWatchBroadcast.bind(null, fullPath, KEY_LISTENERS),\n      errHandler, // no need to use broadcast here\n      fsWatchBroadcast.bind(null, fullPath, KEY_RAW)\n    );\n    if (!watcher) return;\n    watcher.on(EV_ERROR, async (error) => {\n      const broadcastErr = fsWatchBroadcast.bind(null, fullPath, KEY_ERR);\n      cont.watcherUnusable = true; // documented since Node 10.4.1\n      // Workaround for https://github.com/joyent/node/issues/4337\n      if (isWindows && error.code === 'EPERM') {\n        try {\n          const fd = await open(path, 'r');\n          await close(fd);\n          broadcastErr(error);\n        } catch (err) {}\n      } else {\n        broadcastErr(error);\n      }\n    });\n    cont = {\n      listeners: listener,\n      errHandlers: errHandler,\n      rawEmitters: rawEmitter,\n      watcher\n    };\n    FsWatchInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // removes this instance's listeners and closes the underlying fs_watch\n  // instance if there are no more listeners left\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_ERR, errHandler);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      // Check to protect against issue gh-730.\n      // if (cont.watcherUnusable) {\n      cont.watcher.close();\n      // }\n      FsWatchInstances.delete(fullPath);\n      HANDLER_KEYS.forEach(clearItem(cont));\n      cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n// fs_watchFile helpers\n\n// object to hold per-process fs_watchFile instances\n// (may be shared across chokidar FSWatcher instances)\nconst FsWatchFileInstances = new Map();\n\n/**\n * Instantiates the fs_watchFile interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path to be watched\n * @param {String} fullPath absolute path\n * @param {Object} options options to be passed to fs_watchFile\n * @param {Object} handlers container for event listener functions\n * @returns {Function} closer\n */\nconst setFsWatchFileListener = (path, fullPath, options, handlers) => {\n  const {listener, rawEmitter} = handlers;\n  let cont = FsWatchFileInstances.get(fullPath);\n\n  /* eslint-disable no-unused-vars, prefer-destructuring */\n  let listeners = new Set();\n  let rawEmitters = new Set();\n\n  const copts = cont && cont.options;\n  if (copts && (copts.persistent < options.persistent || copts.interval > options.interval)) {\n    // \"Upgrade\" the watcher to persistence or a quicker interval.\n    // This creates some unlikely edge case issues if the user mixes\n    // settings in a very weird way, but solving for those cases\n    // doesn't seem worthwhile for the added complexity.\n    listeners = cont.listeners;\n    rawEmitters = cont.rawEmitters;\n    fs.unwatchFile(fullPath);\n    cont = undefined;\n  }\n\n  /* eslint-enable no-unused-vars, prefer-destructuring */\n\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    // TODO\n    // listeners.add(listener);\n    // rawEmitters.add(rawEmitter);\n    cont = {\n      listeners: listener,\n      rawEmitters: rawEmitter,\n      options,\n      watcher: fs.watchFile(fullPath, options, (curr, prev) => {\n        foreach(cont.rawEmitters, (rawEmitter) => {\n          rawEmitter(EV_CHANGE, fullPath, {curr, prev});\n        });\n        const currmtime = curr.mtimeMs;\n        if (curr.size !== prev.size || currmtime > prev.mtimeMs || currmtime === 0) {\n          foreach(cont.listeners, (listener) => listener(path, curr));\n        }\n      })\n    };\n    FsWatchFileInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // Removes this instance's listeners and closes the underlying fs_watchFile\n  // instance if there are no more listeners left.\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      FsWatchFileInstances.delete(fullPath);\n      fs.unwatchFile(fullPath);\n      cont.options = cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n/**\n * @mixin\n */\nclass NodeFsHandler {\n\n/**\n * @param {import(\"../index\").FSWatcher} fsW\n */\nconstructor(fsW) {\n  this.fsw = fsW;\n  this._boundHandleError = (error) => fsW._handleError(error);\n}\n\n/**\n * Watch file for changes with fs_watchFile or fs_watch.\n * @param {String} path to file or dir\n * @param {Function} listener on fs change\n * @returns {Function} closer for the watcher instance\n */\n_watchWithNodeFs(path, listener) {\n  const opts = this.fsw.options;\n  const directory = sysPath.dirname(path);\n  const basename = sysPath.basename(path);\n  const parent = this.fsw._getWatchedDir(directory);\n  parent.add(basename);\n  const absolutePath = sysPath.resolve(path);\n  const options = {persistent: opts.persistent};\n  if (!listener) listener = EMPTY_FN;\n\n  let closer;\n  if (opts.usePolling) {\n    options.interval = opts.enableBinaryInterval && isBinaryPath(basename) ?\n      opts.binaryInterval : opts.interval;\n    closer = setFsWatchFileListener(path, absolutePath, options, {\n      listener,\n      rawEmitter: this.fsw._emitRaw\n    });\n  } else {\n    closer = setFsWatchListener(path, absolutePath, options, {\n      listener,\n      errHandler: this._boundHandleError,\n      rawEmitter: this.fsw._emitRaw\n    });\n  }\n  return closer;\n}\n\n/**\n * Watch a file and emit add event if warranted.\n * @param {Path} file Path\n * @param {fs.Stats} stats result of fs_stat\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @returns {Function} closer for the watcher instance\n */\n_handleFile(file, stats, initialAdd) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const dirname = sysPath.dirname(file);\n  const basename = sysPath.basename(file);\n  const parent = this.fsw._getWatchedDir(dirname);\n  // stats is always present\n  let prevStats = stats;\n\n  // if the file is already being watched, do nothing\n  if (parent.has(basename)) return;\n\n  const listener = async (path, newStats) => {\n    if (!this.fsw._throttle(THROTTLE_MODE_WATCH, file, 5)) return;\n    if (!newStats || newStats.mtimeMs === 0) {\n      try {\n        const newStats = await stat(file);\n        if (this.fsw.closed) return;\n        // Check that change event was not fired because of changed only accessTime.\n        const at = newStats.atimeMs;\n        const mt = newStats.mtimeMs;\n        if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n          this.fsw._emit(EV_CHANGE, file, newStats);\n        }\n        if (isLinux && prevStats.ino !== newStats.ino) {\n          this.fsw._closeFile(path)\n          prevStats = newStats;\n          this.fsw._addPathCloser(path, this._watchWithNodeFs(file, listener));\n        } else {\n          prevStats = newStats;\n        }\n      } catch (error) {\n        // Fix issues where mtime is null but file is still present\n        this.fsw._remove(dirname, basename);\n      }\n      // add is about to be emitted if file not already tracked in parent\n    } else if (parent.has(basename)) {\n      // Check that change event was not fired because of changed only accessTime.\n      const at = newStats.atimeMs;\n      const mt = newStats.mtimeMs;\n      if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n        this.fsw._emit(EV_CHANGE, file, newStats);\n      }\n      prevStats = newStats;\n    }\n  }\n  // kick off the watcher\n  const closer = this._watchWithNodeFs(file, listener);\n\n  // emit an add event if we're supposed to\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && this.fsw._isntIgnored(file)) {\n    if (!this.fsw._throttle(EV_ADD, file, 0)) return;\n    this.fsw._emit(EV_ADD, file, stats);\n  }\n\n  return closer;\n}\n\n/**\n * Handle symlinks encountered while reading a dir.\n * @param {Object} entry returned by readdirp\n * @param {String} directory path of dir being read\n * @param {String} path of this item\n * @param {String} item basename of this item\n * @returns {Promise<Boolean>} true if no more processing is needed for this entry.\n */\nasync _handleSymlink(entry, directory, path, item) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const full = entry.fullPath;\n  const dir = this.fsw._getWatchedDir(directory);\n\n  if (!this.fsw.options.followSymlinks) {\n    // watch symlink directly (don't follow) and detect changes\n    this.fsw._incrReadyCount();\n\n    let linkPath;\n    try {\n      linkPath = await fsrealpath(path);\n    } catch (e) {\n      this.fsw._emitReady();\n      return true;\n    }\n\n    if (this.fsw.closed) return;\n    if (dir.has(item)) {\n      if (this.fsw._symlinkPaths.get(full) !== linkPath) {\n        this.fsw._symlinkPaths.set(full, linkPath);\n        this.fsw._emit(EV_CHANGE, path, entry.stats);\n      }\n    } else {\n      dir.add(item);\n      this.fsw._symlinkPaths.set(full, linkPath);\n      this.fsw._emit(EV_ADD, path, entry.stats);\n    }\n    this.fsw._emitReady();\n    return true;\n  }\n\n  // don't follow the same symlink more than once\n  if (this.fsw._symlinkPaths.has(full)) {\n    return true;\n  }\n\n  this.fsw._symlinkPaths.set(full, true);\n}\n\n_handleRead(directory, initialAdd, wh, target, dir, depth, throttler) {\n  // Normalize the directory name on Windows\n  directory = sysPath.join(directory, EMPTY_STR);\n\n  if (!wh.hasGlob) {\n    throttler = this.fsw._throttle('readdir', directory, 1000);\n    if (!throttler) return;\n  }\n\n  const previous = this.fsw._getWatchedDir(wh.path);\n  const current = new Set();\n\n  let stream = this.fsw._readdirp(directory, {\n    fileFilter: entry => wh.filterPath(entry),\n    directoryFilter: entry => wh.filterDir(entry),\n    depth: 0\n  }).on(STR_DATA, async (entry) => {\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    const item = entry.path;\n    let path = sysPath.join(directory, item);\n    current.add(item);\n\n    if (entry.stats.isSymbolicLink() && await this._handleSymlink(entry, directory, path, item)) {\n      return;\n    }\n\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    // Files that present in current directory snapshot\n    // but absent in previous are added to watch list and\n    // emit `add` event.\n    if (item === target || !target && !previous.has(item)) {\n      this.fsw._incrReadyCount();\n\n      // ensure relativeness of path is preserved in case of watcher reuse\n      path = sysPath.join(dir, sysPath.relative(dir, path));\n\n      this._addToNodeFs(path, initialAdd, wh, depth + 1);\n    }\n  }).on(EV_ERROR, this._boundHandleError);\n\n  return new Promise(resolve =>\n    stream.once(STR_END, () => {\n      if (this.fsw.closed) {\n        stream = undefined;\n        return;\n      }\n      const wasThrottled = throttler ? throttler.clear() : false;\n\n      resolve();\n\n      // Files that absent in current directory snapshot\n      // but present in previous emit `remove` event\n      // and are removed from @watched[directory].\n      previous.getChildren().filter((item) => {\n        return item !== directory &&\n          !current.has(item) &&\n          // in case of intersecting globs;\n          // a path may have been filtered out of this readdir, but\n          // shouldn't be removed because it matches a different glob\n          (!wh.hasGlob || wh.filterPath({\n            fullPath: sysPath.resolve(directory, item)\n          }));\n      }).forEach((item) => {\n        this.fsw._remove(directory, item);\n      });\n\n      stream = undefined;\n\n      // one more time for any missed in case changes came in extremely quickly\n      if (wasThrottled) this._handleRead(directory, false, wh, target, dir, depth, throttler);\n    })\n  );\n}\n\n/**\n * Read directory to add / remove files from `@watched` list and re-read it on change.\n * @param {String} dir fs path\n * @param {fs.Stats} stats\n * @param {Boolean} initialAdd\n * @param {Number} depth relative to user-supplied path\n * @param {String} target child path targeted for watch\n * @param {Object} wh Common watch helpers for this path\n * @param {String} realpath\n * @returns {Promise<Function>} closer for the watcher instance.\n */\nasync _handleDir(dir, stats, initialAdd, depth, target, wh, realpath) {\n  const parentDir = this.fsw._getWatchedDir(sysPath.dirname(dir));\n  const tracked = parentDir.has(sysPath.basename(dir));\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && !target && !tracked) {\n    if (!wh.hasGlob || wh.globFilter(dir)) this.fsw._emit(EV_ADD_DIR, dir, stats);\n  }\n\n  // ensure dir is tracked (harmless if redundant)\n  parentDir.add(sysPath.basename(dir));\n  this.fsw._getWatchedDir(dir);\n  let throttler;\n  let closer;\n\n  const oDepth = this.fsw.options.depth;\n  if ((oDepth == null || depth <= oDepth) && !this.fsw._symlinkPaths.has(realpath)) {\n    if (!target) {\n      await this._handleRead(dir, initialAdd, wh, target, dir, depth, throttler);\n      if (this.fsw.closed) return;\n    }\n\n    closer = this._watchWithNodeFs(dir, (dirPath, stats) => {\n      // if current directory is removed, do nothing\n      if (stats && stats.mtimeMs === 0) return;\n\n      this._handleRead(dirPath, false, wh, target, dir, depth, throttler);\n    });\n  }\n  return closer;\n}\n\n/**\n * Handle added file, directory, or glob pattern.\n * Delegates call to _handleFile / _handleDir after checks.\n * @param {String} path to file or ir\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @param {Object} priorWh depth relative to user-supplied path\n * @param {Number} depth Child path actually targeted for watch\n * @param {String=} target Child path actually targeted for watch\n * @returns {Promise}\n */\nasync _addToNodeFs(path, initialAdd, priorWh, depth, target) {\n  const ready = this.fsw._emitReady;\n  if (this.fsw._isIgnored(path) || this.fsw.closed) {\n    ready();\n    return false;\n  }\n\n  const wh = this.fsw._getWatchHelpers(path, depth);\n  if (!wh.hasGlob && priorWh) {\n    wh.hasGlob = priorWh.hasGlob;\n    wh.globFilter = priorWh.globFilter;\n    wh.filterPath = entry => priorWh.filterPath(entry);\n    wh.filterDir = entry => priorWh.filterDir(entry);\n  }\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      ready();\n      return false;\n    }\n\n    const follow = this.fsw.options.followSymlinks && !path.includes(STAR) && !path.includes(BRACE_START);\n    let closer;\n    if (stats.isDirectory()) {\n      const absPath = sysPath.resolve(path);\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      closer = await this._handleDir(wh.watchPath, stats, initialAdd, depth, target, wh, targetPath);\n      if (this.fsw.closed) return;\n      // preserve this symlink's target path\n      if (absPath !== targetPath && targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(absPath, targetPath);\n      }\n    } else if (stats.isSymbolicLink()) {\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      const parent = sysPath.dirname(wh.watchPath);\n      this.fsw._getWatchedDir(parent).add(wh.watchPath);\n      this.fsw._emit(EV_ADD, wh.watchPath, stats);\n      closer = await this._handleDir(parent, stats, initialAdd, depth, path, wh, targetPath);\n      if (this.fsw.closed) return;\n\n      // preserve this symlink's target path\n      if (targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(sysPath.resolve(path), targetPath);\n      }\n    } else {\n      closer = this._handleFile(wh.watchPath, stats, initialAdd);\n    }\n    ready();\n\n    this.fsw._addPathCloser(path, closer);\n    return false;\n\n  } catch (error) {\n    if (this.fsw._handleError(error)) {\n      ready();\n      return path;\n    }\n  }\n}\n\n}\n\nmodule.exports = NodeFsHandler;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst { EventEmitter } = require('events');\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst readdirp = require('readdirp');\nconst anymatch = require('anymatch').default;\nconst globParent = require('glob-parent');\nconst isGlob = require('is-glob');\nconst braces = require('braces');\nconst normalizePath = require('normalize-path');\n\nconst NodeFsHandler = require('./lib/nodefs-handler');\nconst FsEventsHandler = require('./lib/fsevents-handler');\nconst {\n  EV_ALL,\n  EV_READY,\n  EV_ADD,\n  EV_CHANGE,\n  EV_UNLINK,\n  EV_ADD_DIR,\n  EV_UNLINK_DIR,\n  EV_RAW,\n  EV_ERROR,\n\n  STR_CLOSE,\n  STR_END,\n\n  BACK_SLASH_RE,\n  DOUBLE_SLASH_RE,\n  SLASH_OR_BACK_SLASH_RE,\n  DOT_RE,\n  REPLACER_RE,\n\n  SLASH,\n  SLASH_SLASH,\n  BRACE_START,\n  BANG,\n  ONE_DOT,\n  TWO_DOTS,\n  GLOBSTAR,\n  SLASH_GLOBSTAR,\n  ANYMATCH_OPTS,\n  STRING_TYPE,\n  FUNCTION_TYPE,\n  EMPTY_STR,\n  EMPTY_FN,\n\n  isWindows,\n  isMacos,\n  isIBMi\n} = require('./lib/constants');\n\nconst stat = promisify(fs.stat);\nconst readdir = promisify(fs.readdir);\n\n/**\n * @typedef {String} Path\n * @typedef {'all'|'add'|'addDir'|'change'|'unlink'|'unlinkDir'|'raw'|'error'|'ready'} EventName\n * @typedef {'readdir'|'watch'|'add'|'remove'|'change'} ThrottleType\n */\n\n/**\n *\n * @typedef {Object} WatchHelpers\n * @property {Boolean} followSymlinks\n * @property {'stat'|'lstat'} statMethod\n * @property {Path} path\n * @property {Path} watchPath\n * @property {Function} entryPath\n * @property {Boolean} hasGlob\n * @property {Object} globFilter\n * @property {Function} filterPath\n * @property {Function} filterDir\n */\n\nconst arrify = (value = []) => Array.isArray(value) ? value : [value];\nconst flatten = (list, result = []) => {\n  list.forEach(item => {\n    if (Array.isArray(item)) {\n      flatten(item, result);\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nconst unifyPaths = (paths_) => {\n  /**\n   * @type {Array<String>}\n   */\n  const paths = flatten(arrify(paths_));\n  if (!paths.every(p => typeof p === STRING_TYPE)) {\n    throw new TypeError(`Non-string provided as watch path: ${paths}`);\n  }\n  return paths.map(normalizePathToUnix);\n};\n\n// If SLASH_SLASH occurs at the beginning of path, it is not replaced\n//     because \"//StoragePC/DrivePool/Movies\" is a valid network path\nconst toUnix = (string) => {\n  let str = string.replace(BACK_SLASH_RE, SLASH);\n  let prepend = false;\n  if (str.startsWith(SLASH_SLASH)) {\n    prepend = true;\n  }\n  while (str.match(DOUBLE_SLASH_RE)) {\n    str = str.replace(DOUBLE_SLASH_RE, SLASH);\n  }\n  if (prepend) {\n    str = SLASH + str;\n  }\n  return str;\n};\n\n// Our version of upath.normalize\n// TODO: this is not equal to path-normalize module - investigate why\nconst normalizePathToUnix = (path) => toUnix(sysPath.normalize(toUnix(path)));\n\nconst normalizeIgnored = (cwd = EMPTY_STR) => (path) => {\n  if (typeof path !== STRING_TYPE) return path;\n  return normalizePathToUnix(sysPath.isAbsolute(path) ? path : sysPath.join(cwd, path));\n};\n\nconst getAbsolutePath = (path, cwd) => {\n  if (sysPath.isAbsolute(path)) {\n    return path;\n  }\n  if (path.startsWith(BANG)) {\n    return BANG + sysPath.join(cwd, path.slice(1));\n  }\n  return sysPath.join(cwd, path);\n};\n\nconst undef = (opts, key) => opts[key] === undefined;\n\n/**\n * Directory entry.\n * @property {Path} path\n * @property {Set<Path>} items\n */\nclass DirEntry {\n  /**\n   * @param {Path} dir\n   * @param {Function} removeWatcher\n   */\n  constructor(dir, removeWatcher) {\n    this.path = dir;\n    this._removeWatcher = removeWatcher;\n    /** @type {Set<Path>} */\n    this.items = new Set();\n  }\n\n  add(item) {\n    const {items} = this;\n    if (!items) return;\n    if (item !== ONE_DOT && item !== TWO_DOTS) items.add(item);\n  }\n\n  async remove(item) {\n    const {items} = this;\n    if (!items) return;\n    items.delete(item);\n    if (items.size > 0) return;\n\n    const dir = this.path;\n    try {\n      await readdir(dir);\n    } catch (err) {\n      if (this._removeWatcher) {\n        this._removeWatcher(sysPath.dirname(dir), sysPath.basename(dir));\n      }\n    }\n  }\n\n  has(item) {\n    const {items} = this;\n    if (!items) return;\n    return items.has(item);\n  }\n\n  /**\n   * @returns {Array<String>}\n   */\n  getChildren() {\n    const {items} = this;\n    if (!items) return;\n    return [...items.values()];\n  }\n\n  dispose() {\n    this.items.clear();\n    delete this.path;\n    delete this._removeWatcher;\n    delete this.items;\n    Object.freeze(this);\n  }\n}\n\nconst STAT_METHOD_F = 'stat';\nconst STAT_METHOD_L = 'lstat';\nclass WatchHelper {\n  constructor(path, watchPath, follow, fsw) {\n    this.fsw = fsw;\n    this.path = path = path.replace(REPLACER_RE, EMPTY_STR);\n    this.watchPath = watchPath;\n    this.fullWatchPath = sysPath.resolve(watchPath);\n    this.hasGlob = watchPath !== path;\n    /** @type {object|boolean} */\n    if (path === EMPTY_STR) this.hasGlob = false;\n    this.globSymlink = this.hasGlob && follow ? undefined : false;\n    this.globFilter = this.hasGlob ? anymatch(path, undefined, ANYMATCH_OPTS) : false;\n    this.dirParts = this.getDirParts(path);\n    this.dirParts.forEach((parts) => {\n      if (parts.length > 1) parts.pop();\n    });\n    this.followSymlinks = follow;\n    this.statMethod = follow ? STAT_METHOD_F : STAT_METHOD_L;\n  }\n\n  checkGlobSymlink(entry) {\n    // only need to resolve once\n    // first entry should always have entry.parentDir === EMPTY_STR\n    if (this.globSymlink === undefined) {\n      this.globSymlink = entry.fullParentDir === this.fullWatchPath ?\n        false : {realPath: entry.fullParentDir, linkPath: this.fullWatchPath};\n    }\n\n    if (this.globSymlink) {\n      return entry.fullPath.replace(this.globSymlink.realPath, this.globSymlink.linkPath);\n    }\n\n    return entry.fullPath;\n  }\n\n  entryPath(entry) {\n    return sysPath.join(this.watchPath,\n      sysPath.relative(this.watchPath, this.checkGlobSymlink(entry))\n    );\n  }\n\n  filterPath(entry) {\n    const {stats} = entry;\n    if (stats && stats.isSymbolicLink()) return this.filterDir(entry);\n    const resolvedPath = this.entryPath(entry);\n    const matchesGlob = this.hasGlob && typeof this.globFilter === FUNCTION_TYPE ?\n      this.globFilter(resolvedPath) : true;\n    return matchesGlob &&\n      this.fsw._isntIgnored(resolvedPath, stats) &&\n      this.fsw._hasReadPermissions(stats);\n  }\n\n  getDirParts(path) {\n    if (!this.hasGlob) return [];\n    const parts = [];\n    const expandedPath = path.includes(BRACE_START) ? braces.expand(path) : [path];\n    expandedPath.forEach((path) => {\n      parts.push(sysPath.relative(this.watchPath, path).split(SLASH_OR_BACK_SLASH_RE));\n    });\n    return parts;\n  }\n\n  filterDir(entry) {\n    if (this.hasGlob) {\n      const entryParts = this.getDirParts(this.checkGlobSymlink(entry));\n      let globstar = false;\n      this.unmatchedGlob = !this.dirParts.some((parts) => {\n        return parts.every((part, i) => {\n          if (part === GLOBSTAR) globstar = true;\n          return globstar || !entryParts[0][i] || anymatch(part, entryParts[0][i], ANYMATCH_OPTS);\n        });\n      });\n    }\n    return !this.unmatchedGlob && this.fsw._isntIgnored(this.entryPath(entry), entry.stats);\n  }\n}\n\n/**\n * Watches files & directories for changes. Emitted events:\n * `add`, `addDir`, `change`, `unlink`, `unlinkDir`, `all`, `error`\n *\n *     new FSWatcher()\n *       .add(directories)\n *       .on('add', path => log('File', path, 'was added'))\n */\nclass FSWatcher extends EventEmitter {\n// Not indenting methods for history sake; for now.\nconstructor(_opts) {\n  super();\n\n  const opts = {};\n  if (_opts) Object.assign(opts, _opts); // for frozen objects\n\n  /** @type {Map<String, DirEntry>} */\n  this._watched = new Map();\n  /** @type {Map<String, Array>} */\n  this._closers = new Map();\n  /** @type {Set<String>} */\n  this._ignoredPaths = new Set();\n\n  /** @type {Map<ThrottleType, Map>} */\n  this._throttled = new Map();\n\n  /** @type {Map<Path, String|Boolean>} */\n  this._symlinkPaths = new Map();\n\n  this._streams = new Set();\n  this.closed = false;\n\n  // Set up default options.\n  if (undef(opts, 'persistent')) opts.persistent = true;\n  if (undef(opts, 'ignoreInitial')) opts.ignoreInitial = false;\n  if (undef(opts, 'ignorePermissionErrors')) opts.ignorePermissionErrors = false;\n  if (undef(opts, 'interval')) opts.interval = 100;\n  if (undef(opts, 'binaryInterval')) opts.binaryInterval = 300;\n  if (undef(opts, 'disableGlobbing')) opts.disableGlobbing = false;\n  opts.enableBinaryInterval = opts.binaryInterval !== opts.interval;\n\n  // Enable fsevents on OS X when polling isn't explicitly enabled.\n  if (undef(opts, 'useFsEvents')) opts.useFsEvents = !opts.usePolling;\n\n  // If we can't use fsevents, ensure the options reflect it's disabled.\n  const canUseFsEvents = FsEventsHandler.canUse();\n  if (!canUseFsEvents) opts.useFsEvents = false;\n\n  // Use polling on Mac if not using fsevents.\n  // Other platforms use non-polling fs_watch.\n  if (undef(opts, 'usePolling') && !opts.useFsEvents) {\n    opts.usePolling = isMacos;\n  }\n\n  // Always default to polling on IBM i because fs.watch() is not available on IBM i.\n  if(isIBMi) {\n    opts.usePolling = true;\n  }\n\n  // Global override (useful for end-developers that need to force polling for all\n  // instances of chokidar, regardless of usage/dependency depth)\n  const envPoll = process.env.CHOKIDAR_USEPOLLING;\n  if (envPoll !== undefined) {\n    const envLower = envPoll.toLowerCase();\n\n    if (envLower === 'false' || envLower === '0') {\n      opts.usePolling = false;\n    } else if (envLower === 'true' || envLower === '1') {\n      opts.usePolling = true;\n    } else {\n      opts.usePolling = !!envLower;\n    }\n  }\n  const envInterval = process.env.CHOKIDAR_INTERVAL;\n  if (envInterval) {\n    opts.interval = Number.parseInt(envInterval, 10);\n  }\n\n  // Editor atomic write normalization enabled by default with fs.watch\n  if (undef(opts, 'atomic')) opts.atomic = !opts.usePolling && !opts.useFsEvents;\n  if (opts.atomic) this._pendingUnlinks = new Map();\n\n  if (undef(opts, 'followSymlinks')) opts.followSymlinks = true;\n\n  if (undef(opts, 'awaitWriteFinish')) opts.awaitWriteFinish = false;\n  if (opts.awaitWriteFinish === true) opts.awaitWriteFinish = {};\n  const awf = opts.awaitWriteFinish;\n  if (awf) {\n    if (!awf.stabilityThreshold) awf.stabilityThreshold = 2000;\n    if (!awf.pollInterval) awf.pollInterval = 100;\n    this._pendingWrites = new Map();\n  }\n  if (opts.ignored) opts.ignored = arrify(opts.ignored);\n\n  let readyCalls = 0;\n  this._emitReady = () => {\n    readyCalls++;\n    if (readyCalls >= this._readyCount) {\n      this._emitReady = EMPTY_FN;\n      this._readyEmitted = true;\n      // use process.nextTick to allow time for listener to be bound\n      process.nextTick(() => this.emit(EV_READY));\n    }\n  };\n  this._emitRaw = (...args) => this.emit(EV_RAW, ...args);\n  this._readyEmitted = false;\n  this.options = opts;\n\n  // Initialize with proper watcher.\n  if (opts.useFsEvents) {\n    this._fsEventsHandler = new FsEventsHandler(this);\n  } else {\n    this._nodeFsHandler = new NodeFsHandler(this);\n  }\n\n  // You’re frozen when your heart’s not open.\n  Object.freeze(opts);\n}\n\n// Public methods\n\n/**\n * Adds paths to be watched on an existing FSWatcher instance\n * @param {Path|Array<Path>} paths_\n * @param {String=} _origAdd private; for handling non-existent paths to be watched\n * @param {Boolean=} _internal private; indicates a non-user add\n * @returns {FSWatcher} for chaining\n */\nadd(paths_, _origAdd, _internal) {\n  const {cwd, disableGlobbing} = this.options;\n  this.closed = false;\n  let paths = unifyPaths(paths_);\n  if (cwd) {\n    paths = paths.map((path) => {\n      const absPath = getAbsolutePath(path, cwd);\n\n      // Check `path` instead of `absPath` because the cwd portion can't be a glob\n      if (disableGlobbing || !isGlob(path)) {\n        return absPath;\n      }\n      return normalizePath(absPath);\n    });\n  }\n\n  // set aside negated glob strings\n  paths = paths.filter((path) => {\n    if (path.startsWith(BANG)) {\n      this._ignoredPaths.add(path.slice(1));\n      return false;\n    }\n\n    // if a path is being added that was previously ignored, stop ignoring it\n    this._ignoredPaths.delete(path);\n    this._ignoredPaths.delete(path + SLASH_GLOBSTAR);\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n\n    return true;\n  });\n\n  if (this.options.useFsEvents && this._fsEventsHandler) {\n    if (!this._readyCount) this._readyCount = paths.length;\n    if (this.options.persistent) this._readyCount += paths.length;\n    paths.forEach((path) => this._fsEventsHandler._addToFsEvents(path));\n  } else {\n    if (!this._readyCount) this._readyCount = 0;\n    this._readyCount += paths.length;\n    Promise.all(\n      paths.map(async path => {\n        const res = await this._nodeFsHandler._addToNodeFs(path, !_internal, 0, 0, _origAdd);\n        if (res) this._emitReady();\n        return res;\n      })\n    ).then(results => {\n      if (this.closed) return;\n      results.filter(item => item).forEach(item => {\n        this.add(sysPath.dirname(item), sysPath.basename(_origAdd || item));\n      });\n    });\n  }\n\n  return this;\n}\n\n/**\n * Close watchers or start ignoring events from specified paths.\n * @param {Path|Array<Path>} paths_ - string or array of strings, file/directory paths and/or globs\n * @returns {FSWatcher} for chaining\n*/\nunwatch(paths_) {\n  if (this.closed) return this;\n  const paths = unifyPaths(paths_);\n  const {cwd} = this.options;\n\n  paths.forEach((path) => {\n    // convert to absolute path unless relative path already matches\n    if (!sysPath.isAbsolute(path) && !this._closers.has(path)) {\n      if (cwd) path = sysPath.join(cwd, path);\n      path = sysPath.resolve(path);\n    }\n\n    this._closePath(path);\n\n    this._ignoredPaths.add(path);\n    if (this._watched.has(path)) {\n      this._ignoredPaths.add(path + SLASH_GLOBSTAR);\n    }\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n  });\n\n  return this;\n}\n\n/**\n * Close watchers and remove all listeners from watched paths.\n * @returns {Promise<void>}.\n*/\nclose() {\n  if (this.closed) return this._closePromise;\n  this.closed = true;\n\n  // Memory management.\n  this.removeAllListeners();\n  const closers = [];\n  this._closers.forEach(closerList => closerList.forEach(closer => {\n    const promise = closer();\n    if (promise instanceof Promise) closers.push(promise);\n  }));\n  this._streams.forEach(stream => stream.destroy());\n  this._userIgnored = undefined;\n  this._readyCount = 0;\n  this._readyEmitted = false;\n  this._watched.forEach(dirent => dirent.dispose());\n  ['closers', 'watched', 'streams', 'symlinkPaths', 'throttled'].forEach(key => {\n    this[`_${key}`].clear();\n  });\n\n  this._closePromise = closers.length ? Promise.all(closers).then(() => undefined) : Promise.resolve();\n  return this._closePromise;\n}\n\n/**\n * Expose list of watched paths\n * @returns {Object} for chaining\n*/\ngetWatched() {\n  const watchList = {};\n  this._watched.forEach((entry, dir) => {\n    const key = this.options.cwd ? sysPath.relative(this.options.cwd, dir) : dir;\n    watchList[key || ONE_DOT] = entry.getChildren().sort();\n  });\n  return watchList;\n}\n\nemitWithAll(event, args) {\n  this.emit(...args);\n  if (event !== EV_ERROR) this.emit(EV_ALL, ...args);\n}\n\n// Common helpers\n// --------------\n\n/**\n * Normalize and emit events.\n * Calling _emit DOES NOT MEAN emit() would be called!\n * @param {EventName} event Type of event\n * @param {Path} path File or directory path\n * @param {*=} val1 arguments to be passed with event\n * @param {*=} val2\n * @param {*=} val3\n * @returns the error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\nasync _emit(event, path, val1, val2, val3) {\n  if (this.closed) return;\n\n  const opts = this.options;\n  if (isWindows) path = sysPath.normalize(path);\n  if (opts.cwd) path = sysPath.relative(opts.cwd, path);\n  /** @type Array<any> */\n  const args = [event, path];\n  if (val3 !== undefined) args.push(val1, val2, val3);\n  else if (val2 !== undefined) args.push(val1, val2);\n  else if (val1 !== undefined) args.push(val1);\n\n  const awf = opts.awaitWriteFinish;\n  let pw;\n  if (awf && (pw = this._pendingWrites.get(path))) {\n    pw.lastChange = new Date();\n    return this;\n  }\n\n  if (opts.atomic) {\n    if (event === EV_UNLINK) {\n      this._pendingUnlinks.set(path, args);\n      setTimeout(() => {\n        this._pendingUnlinks.forEach((entry, path) => {\n          this.emit(...entry);\n          this.emit(EV_ALL, ...entry);\n          this._pendingUnlinks.delete(path);\n        });\n      }, typeof opts.atomic === 'number' ? opts.atomic : 100);\n      return this;\n    }\n    if (event === EV_ADD && this._pendingUnlinks.has(path)) {\n      event = args[0] = EV_CHANGE;\n      this._pendingUnlinks.delete(path);\n    }\n  }\n\n  if (awf && (event === EV_ADD || event === EV_CHANGE) && this._readyEmitted) {\n    const awfEmit = (err, stats) => {\n      if (err) {\n        event = args[0] = EV_ERROR;\n        args[1] = err;\n        this.emitWithAll(event, args);\n      } else if (stats) {\n        // if stats doesn't exist the file must have been deleted\n        if (args.length > 2) {\n          args[2] = stats;\n        } else {\n          args.push(stats);\n        }\n        this.emitWithAll(event, args);\n      }\n    };\n\n    this._awaitWriteFinish(path, awf.stabilityThreshold, event, awfEmit);\n    return this;\n  }\n\n  if (event === EV_CHANGE) {\n    const isThrottled = !this._throttle(EV_CHANGE, path, 50);\n    if (isThrottled) return this;\n  }\n\n  if (opts.alwaysStat && val1 === undefined &&\n    (event === EV_ADD || event === EV_ADD_DIR || event === EV_CHANGE)\n  ) {\n    const fullPath = opts.cwd ? sysPath.join(opts.cwd, path) : path;\n    let stats;\n    try {\n      stats = await stat(fullPath);\n    } catch (err) {}\n    // Suppress event when fs_stat fails, to avoid sending undefined 'stat'\n    if (!stats || this.closed) return;\n    args.push(stats);\n  }\n  this.emitWithAll(event, args);\n\n  return this;\n}\n\n/**\n * Common handler for errors\n * @param {Error} error\n * @returns {Error|Boolean} The error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\n_handleError(error) {\n  const code = error && error.code;\n  if (error && code !== 'ENOENT' && code !== 'ENOTDIR' &&\n    (!this.options.ignorePermissionErrors || (code !== 'EPERM' && code !== 'EACCES'))\n  ) {\n    this.emit(EV_ERROR, error);\n  }\n  return error || this.closed;\n}\n\n/**\n * Helper utility for throttling\n * @param {ThrottleType} actionType type being throttled\n * @param {Path} path being acted upon\n * @param {Number} timeout duration of time to suppress duplicate actions\n * @returns {Object|false} tracking object or false if action should be suppressed\n */\n_throttle(actionType, path, timeout) {\n  if (!this._throttled.has(actionType)) {\n    this._throttled.set(actionType, new Map());\n  }\n\n  /** @type {Map<Path, Object>} */\n  const action = this._throttled.get(actionType);\n  /** @type {Object} */\n  const actionPath = action.get(path);\n\n  if (actionPath) {\n    actionPath.count++;\n    return false;\n  }\n\n  let timeoutObject;\n  const clear = () => {\n    const item = action.get(path);\n    const count = item ? item.count : 0;\n    action.delete(path);\n    clearTimeout(timeoutObject);\n    if (item) clearTimeout(item.timeoutObject);\n    return count;\n  };\n  timeoutObject = setTimeout(clear, timeout);\n  const thr = {timeoutObject, clear, count: 0};\n  action.set(path, thr);\n  return thr;\n}\n\n_incrReadyCount() {\n  return this._readyCount++;\n}\n\n/**\n * Awaits write operation to finish.\n * Polls a newly created file for size variations. When files size does not change for 'threshold' milliseconds calls callback.\n * @param {Path} path being acted upon\n * @param {Number} threshold Time in milliseconds a file size must be fixed before acknowledging write OP is finished\n * @param {EventName} event\n * @param {Function} awfEmit Callback to be called when ready for event to be emitted.\n */\n_awaitWriteFinish(path, threshold, event, awfEmit) {\n  let timeoutHandler;\n\n  let fullPath = path;\n  if (this.options.cwd && !sysPath.isAbsolute(path)) {\n    fullPath = sysPath.join(this.options.cwd, path);\n  }\n\n  const now = new Date();\n\n  const awaitWriteFinish = (prevStat) => {\n    fs.stat(fullPath, (err, curStat) => {\n      if (err || !this._pendingWrites.has(path)) {\n        if (err && err.code !== 'ENOENT') awfEmit(err);\n        return;\n      }\n\n      const now = Number(new Date());\n\n      if (prevStat && curStat.size !== prevStat.size) {\n        this._pendingWrites.get(path).lastChange = now;\n      }\n      const pw = this._pendingWrites.get(path);\n      const df = now - pw.lastChange;\n\n      if (df >= threshold) {\n        this._pendingWrites.delete(path);\n        awfEmit(undefined, curStat);\n      } else {\n        timeoutHandler = setTimeout(\n          awaitWriteFinish,\n          this.options.awaitWriteFinish.pollInterval,\n          curStat\n        );\n      }\n    });\n  };\n\n  if (!this._pendingWrites.has(path)) {\n    this._pendingWrites.set(path, {\n      lastChange: now,\n      cancelWait: () => {\n        this._pendingWrites.delete(path);\n        clearTimeout(timeoutHandler);\n        return event;\n      }\n    });\n    timeoutHandler = setTimeout(\n      awaitWriteFinish,\n      this.options.awaitWriteFinish.pollInterval\n    );\n  }\n}\n\n_getGlobIgnored() {\n  return [...this._ignoredPaths.values()];\n}\n\n/**\n * Determines whether user has asked to ignore this path.\n * @param {Path} path filepath or dir\n * @param {fs.Stats=} stats result of fs.stat\n * @returns {Boolean}\n */\n_isIgnored(path, stats) {\n  if (this.options.atomic && DOT_RE.test(path)) return true;\n  if (!this._userIgnored) {\n    const {cwd} = this.options;\n    const ign = this.options.ignored;\n\n    const ignored = ign && ign.map(normalizeIgnored(cwd));\n    const paths = arrify(ignored)\n      .filter((path) => typeof path === STRING_TYPE && !isGlob(path))\n      .map((path) => path + SLASH_GLOBSTAR);\n    const list = this._getGlobIgnored().map(normalizeIgnored(cwd)).concat(ignored, paths);\n    this._userIgnored = anymatch(list, undefined, ANYMATCH_OPTS);\n  }\n\n  return this._userIgnored([path, stats]);\n}\n\n_isntIgnored(path, stat) {\n  return !this._isIgnored(path, stat);\n}\n\n/**\n * Provides a set of common helpers and properties relating to symlink and glob handling.\n * @param {Path} path file, directory, or glob pattern being watched\n * @param {Number=} depth at any depth > 0, this isn't a glob\n * @returns {WatchHelper} object containing helpers for this path\n */\n_getWatchHelpers(path, depth) {\n  const watchPath = depth || this.options.disableGlobbing || !isGlob(path) ? path : globParent(path);\n  const follow = this.options.followSymlinks;\n\n  return new WatchHelper(path, watchPath, follow, this);\n}\n\n// Directory helpers\n// -----------------\n\n/**\n * Provides directory tracking objects\n * @param {String} directory path of the directory\n * @returns {DirEntry} the directory's tracking object\n */\n_getWatchedDir(directory) {\n  if (!this._boundRemove) this._boundRemove = this._remove.bind(this);\n  const dir = sysPath.resolve(directory);\n  if (!this._watched.has(dir)) this._watched.set(dir, new DirEntry(dir, this._boundRemove));\n  return this._watched.get(dir);\n}\n\n// File helpers\n// ------------\n\n/**\n * Check for read permissions.\n * Based on this answer on SO: https://stackoverflow.com/a/11781404/1358405\n * @param {fs.Stats} stats - object, result of fs_stat\n * @returns {Boolean} indicates whether the file can be read\n*/\n_hasReadPermissions(stats) {\n  if (this.options.ignorePermissionErrors) return true;\n\n  // stats.mode may be bigint\n  const md = stats && Number.parseInt(stats.mode, 10);\n  const st = md & 0o777;\n  const it = Number.parseInt(st.toString(8)[0], 10);\n  return Boolean(4 & it);\n}\n\n/**\n * Handles emitting unlink events for\n * files and directories, and via recursion, for\n * files and directories within directories that are unlinked\n * @param {String} directory within which the following item is located\n * @param {String} item      base path of item/directory\n * @returns {void}\n*/\n_remove(directory, item, isDirectory) {\n  // if what is being deleted is a directory, get that directory's paths\n  // for recursive deleting and cleaning of watched object\n  // if it is not a directory, nestedDirectoryChildren will be empty array\n  const path = sysPath.join(directory, item);\n  const fullPath = sysPath.resolve(path);\n  isDirectory = isDirectory != null\n    ? isDirectory\n    : this._watched.has(path) || this._watched.has(fullPath);\n\n  // prevent duplicate handling in case of arriving here nearly simultaneously\n  // via multiple paths (such as _handleFile and _handleDir)\n  if (!this._throttle('remove', path, 100)) return;\n\n  // if the only watched file is removed, watch for its return\n  if (!isDirectory && !this.options.useFsEvents && this._watched.size === 1) {\n    this.add(directory, item, true);\n  }\n\n  // This will create a new entry in the watched object in either case\n  // so we got to do the directory check beforehand\n  const wp = this._getWatchedDir(path);\n  const nestedDirectoryChildren = wp.getChildren();\n\n  // Recursively remove children directories / files.\n  nestedDirectoryChildren.forEach(nested => this._remove(path, nested));\n\n  // Check if item was on the watched list and remove it\n  const parent = this._getWatchedDir(directory);\n  const wasTracked = parent.has(item);\n  parent.remove(item);\n\n  // Fixes issue #1042 -> Relative paths were detected and added as symlinks\n  // (https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L612),\n  // but never removed from the map in case the path was deleted.\n  // This leads to an incorrect state if the path was recreated:\n  // https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L553\n  if (this._symlinkPaths.has(fullPath)) {\n    this._symlinkPaths.delete(fullPath);\n  }\n\n  // If we wait for this file to be fully written, cancel the wait.\n  let relPath = path;\n  if (this.options.cwd) relPath = sysPath.relative(this.options.cwd, path);\n  if (this.options.awaitWriteFinish && this._pendingWrites.has(relPath)) {\n    const event = this._pendingWrites.get(relPath).cancelWait();\n    if (event === EV_ADD) return;\n  }\n\n  // The Entry will either be a directory that just got removed\n  // or a bogus entry to a file, in either case we have to remove it\n  this._watched.delete(path);\n  this._watched.delete(fullPath);\n  const eventName = isDirectory ? EV_UNLINK_DIR : EV_UNLINK;\n  if (wasTracked && !this._isIgnored(path)) this._emit(eventName, path);\n\n  // Avoid conflicts if we later create another file with the same name\n  if (!this.options.useFsEvents) {\n    this._closePath(path);\n  }\n}\n\n/**\n * Closes all watchers for a path\n * @param {Path} path\n */\n_closePath(path) {\n  this._closeFile(path)\n  const dir = sysPath.dirname(path);\n  this._getWatchedDir(dir).remove(sysPath.basename(path));\n}\n\n/**\n * Closes only file-specific watchers\n * @param {Path} path\n */\n_closeFile(path) {\n  const closers = this._closers.get(path);\n  if (!closers) return;\n  closers.forEach(closer => closer());\n  this._closers.delete(path);\n}\n\n/**\n *\n * @param {Path} path\n * @param {Function} closer\n */\n_addPathCloser(path, closer) {\n  if (!closer) return;\n  let list = this._closers.get(path);\n  if (!list) {\n    list = [];\n    this._closers.set(path, list);\n  }\n  list.push(closer);\n}\n\n_readdirp(root, opts) {\n  if (this.closed) return;\n  const options = {type: EV_ALL, alwaysStat: true, lstat: true, ...opts};\n  let stream = readdirp(root, options);\n  this._streams.add(stream);\n  stream.once(STR_CLOSE, () => {\n    stream = undefined;\n  });\n  stream.once(STR_END, () => {\n    if (stream) {\n      this._streams.delete(stream);\n      stream = undefined;\n    }\n  });\n  return stream;\n}\n\n}\n\n// Export FSWatcher class\nexports.FSWatcher = FSWatcher;\n\n/**\n * Instantiates watcher with paths to be tracked.\n * @param {String|Array<String>} paths file/directory paths and/or globs\n * @param {Object=} options chokidar opts\n * @returns an instance of FSWatcher for chaining.\n */\nconst watch = (paths, options) => {\n  const watcher = new FSWatcher(options);\n  watcher.add(paths);\n  return watcher;\n};\n\nexports.watch = watch;\n","'use strict';\n\nconst {sep} = require('path');\nconst {platform} = process;\nconst os = require('os');\n\nexports.EV_ALL = 'all';\nexports.EV_READY = 'ready';\nexports.EV_ADD = 'add';\nexports.EV_CHANGE = 'change';\nexports.EV_ADD_DIR = 'addDir';\nexports.EV_UNLINK = 'unlink';\nexports.EV_UNLINK_DIR = 'unlinkDir';\nexports.EV_RAW = 'raw';\nexports.EV_ERROR = 'error';\n\nexports.STR_DATA = 'data';\nexports.STR_END = 'end';\nexports.STR_CLOSE = 'close';\n\nexports.FSEVENT_CREATED = 'created';\nexports.FSEVENT_MODIFIED = 'modified';\nexports.FSEVENT_DELETED = 'deleted';\nexports.FSEVENT_MOVED = 'moved';\nexports.FSEVENT_CLONED = 'cloned';\nexports.FSEVENT_UNKNOWN = 'unknown';\nexports.FSEVENT_FLAG_MUST_SCAN_SUBDIRS = 1;\nexports.FSEVENT_TYPE_FILE = 'file';\nexports.FSEVENT_TYPE_DIRECTORY = 'directory';\nexports.FSEVENT_TYPE_SYMLINK = 'symlink';\n\nexports.KEY_LISTENERS = 'listeners';\nexports.KEY_ERR = 'errHandlers';\nexports.KEY_RAW = 'rawEmitters';\nexports.HANDLER_KEYS = [exports.KEY_LISTENERS, exports.KEY_ERR, exports.KEY_RAW];\n\nexports.DOT_SLASH = `.${sep}`;\n\nexports.BACK_SLASH_RE = /\\\\/g;\nexports.DOUBLE_SLASH_RE = /\\/\\//;\nexports.SLASH_OR_BACK_SLASH_RE = /[/\\\\]/;\nexports.DOT_RE = /\\..*\\.(sw[px])$|~$|\\.subl.*\\.tmp/;\nexports.REPLACER_RE = /^\\.[/\\\\]/;\n\nexports.SLASH = '/';\nexports.SLASH_SLASH = '//';\nexports.BRACE_START = '{';\nexports.BANG = '!';\nexports.ONE_DOT = '.';\nexports.TWO_DOTS = '..';\nexports.STAR = '*';\nexports.GLOBSTAR = '**';\nexports.ROOT_GLOBSTAR = '/**/*';\nexports.SLASH_GLOBSTAR = '/**';\nexports.DIR_SUFFIX = 'Dir';\nexports.ANYMATCH_OPTS = {dot: true};\nexports.STRING_TYPE = 'string';\nexports.FUNCTION_TYPE = 'function';\nexports.EMPTY_STR = '';\nexports.EMPTY_FN = () => {};\nexports.IDENTITY_FN = val => val;\n\nexports.isWindows = platform === 'win32';\nexports.isMacos = platform === 'darwin';\nexports.isLinux = platform === 'linux';\nexports.isIBMi = os.type() === 'OS400';\n","module.exports = require(\"stream\");","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","module.exports = require(\"child_process\");","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n","module.exports = require(\"vscode\");","module.exports = require(\"events\");","module.exports = require('./binary-extensions.json');\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (const pattern of input) {\n      const result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n  return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst picomatch = require('picomatch');\nconst normalizePath = require('normalize-path');\n\n/**\n * @typedef {(testString: string) => boolean} AnymatchFn\n * @typedef {string|RegExp|AnymatchFn} AnymatchPattern\n * @typedef {AnymatchPattern|AnymatchPattern[]} AnymatchMatcher\n */\nconst BANG = '!';\nconst DEFAULT_OPTIONS = {returnIndex: false};\nconst arrify = (item) => Array.isArray(item) ? item : [item];\n\n/**\n * @param {AnymatchPattern} matcher\n * @param {object} options\n * @returns {AnymatchFn}\n */\nconst createPattern = (matcher, options) => {\n  if (typeof matcher === 'function') {\n    return matcher;\n  }\n  if (typeof matcher === 'string') {\n    const glob = picomatch(matcher, options);\n    return (string) => matcher === string || glob(string);\n  }\n  if (matcher instanceof RegExp) {\n    return (string) => matcher.test(string);\n  }\n  return (string) => false;\n};\n\n/**\n * @param {Array<Function>} patterns\n * @param {Array<Function>} negPatterns\n * @param {String|Array} args\n * @param {Boolean} returnIndex\n * @returns {boolean|number}\n */\nconst matchPatterns = (patterns, negPatterns, args, returnIndex) => {\n  const isList = Array.isArray(args);\n  const _path = isList ? args[0] : args;\n  if (!isList && typeof _path !== 'string') {\n    throw new TypeError('anymatch: second argument must be a string: got ' +\n      Object.prototype.toString.call(_path))\n  }\n  const path = normalizePath(_path, false);\n\n  for (let index = 0; index < negPatterns.length; index++) {\n    const nglob = negPatterns[index];\n    if (nglob(path)) {\n      return returnIndex ? -1 : false;\n    }\n  }\n\n  const applied = isList && [path].concat(args.slice(1));\n  for (let index = 0; index < patterns.length; index++) {\n    const pattern = patterns[index];\n    if (isList ? pattern(...applied) : pattern(path)) {\n      return returnIndex ? index : true;\n    }\n  }\n\n  return returnIndex ? -1 : false;\n};\n\n/**\n * @param {AnymatchMatcher} matchers\n * @param {Array|string} testString\n * @param {object} options\n * @returns {boolean|number|Function}\n */\nconst anymatch = (matchers, testString, options = DEFAULT_OPTIONS) => {\n  if (matchers == null) {\n    throw new TypeError('anymatch: specify first argument');\n  }\n  const opts = typeof options === 'boolean' ? {returnIndex: options} : options;\n  const returnIndex = opts.returnIndex || false;\n\n  // Early cache for matchers.\n  const mtchers = arrify(matchers);\n  const negatedGlobs = mtchers\n    .filter(item => typeof item === 'string' && item.charAt(0) === BANG)\n    .map(item => item.slice(1))\n    .map(item => picomatch(item, opts));\n  const patterns = mtchers\n    .filter(item => typeof item !== 'string' || (typeof item === 'string' && item.charAt(0) !== BANG))\n    .map(matcher => createPattern(matcher, opts));\n\n  if (testString == null) {\n    return (testString, ri = false) => {\n      const returnIndex = typeof ri === 'boolean' ? ri : false;\n      return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n    }\n  }\n\n  return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n};\n\nanymatch.default = anymatch;\nmodule.exports = anymatch;\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  const opts = options || {};\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  const ast = { type: 'root', input, nodes: [] };\n  const stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  const length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      const open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      const dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      const brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      const type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        const open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      const siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        const before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      const parent = stack[stack.length - 1];\n      const index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  const node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      const ele = arr[i];\n\n      if (Array.isArray(ele)) {\n        flat(ele);\n        continue;\n      }\n\n      if (ele !== undefined) {\n        result.push(ele);\n      }\n    }\n    return result;\n  };\n\n  flat(args);\n  return result;\n};\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  const result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (const item of queue) {\n    if (Array.isArray(item)) {\n      for (const value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  const rangeLimit = options.rangeLimit === undefined ? 1000 : options.rangeLimit;\n\n  const walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    const enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      const child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  const walk = (node, parent = {}) => {\n    const invalidBlock = utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    const invalid = invalidBlock === true || invalidNode === true;\n    const prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n\n    if (node.isClose === true) {\n      console.log('node.isClose', prefix, node.value);\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? prefix + node.value : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? prefix + node.value : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n      const range = fill(...args, { ...options, wrap: false, toRegex: true, strictZeros: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  const stringify = (node, parent = {}) => {\n    const invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 10000,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\nconst path = require('path');\nconst binaryExtensions = require('binary-extensions');\n\nconst extensions = new Set(binaryExtensions);\n\nmodule.exports = filePath => extensions.has(path.extname(filePath).slice(1).toLowerCase());\n","module.exports = require(\"os\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\n\nlet fsevents;\ntry {\n  fsevents = require('fsevents');\n} catch (error) {\n  if (process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR) console.error(error);\n}\n\nif (fsevents) {\n  // TODO: real check\n  const mtch = process.version.match(/v(\\d+)\\.(\\d+)/);\n  if (mtch && mtch[1] && mtch[2]) {\n    const maj = Number.parseInt(mtch[1], 10);\n    const min = Number.parseInt(mtch[2], 10);\n    if (maj === 8 && min < 16) {\n      fsevents = undefined;\n    }\n  }\n}\n\nconst {\n  EV_ADD,\n  EV_CHANGE,\n  EV_ADD_DIR,\n  EV_UNLINK,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  FSEVENT_CREATED,\n  FSEVENT_MODIFIED,\n  FSEVENT_DELETED,\n  FSEVENT_MOVED,\n  // FSEVENT_CLONED,\n  FSEVENT_UNKNOWN,\n  FSEVENT_FLAG_MUST_SCAN_SUBDIRS,\n  FSEVENT_TYPE_FILE,\n  FSEVENT_TYPE_DIRECTORY,\n  FSEVENT_TYPE_SYMLINK,\n\n  ROOT_GLOBSTAR,\n  DIR_SUFFIX,\n  DOT_SLASH,\n  FUNCTION_TYPE,\n  EMPTY_FN,\n  IDENTITY_FN\n} = require('./constants');\n\nconst Depth = (value) => isNaN(value) ? {} : {depth: value};\n\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\nconst statMethods = { stat, lstat };\n\n/**\n * @typedef {String} Path\n */\n\n/**\n * @typedef {Object} FsEventsWatchContainer\n * @property {Set<Function>} listeners\n * @property {Function} rawEmitter\n * @property {{stop: Function}} watcher\n */\n\n// fsevents instance helper functions\n/**\n * Object to hold per-process fsevents instances (may be shared across chokidar FSWatcher instances)\n * @type {Map<Path,FsEventsWatchContainer>}\n */\nconst FSEventsWatchers = new Map();\n\n// Threshold of duplicate path prefixes at which to start\n// consolidating going forward\nconst consolidateThreshhold = 10;\n\nconst wrongEventFlags = new Set([\n  69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912\n]);\n\n/**\n * Instantiates the fsevents interface\n * @param {Path} path path to be watched\n * @param {Function} callback called when fsevents is bound and ready\n * @returns {{stop: Function}} new fsevents instance\n */\nconst createFSEventsInstance = (path, callback) => {\n  const stop = fsevents.watch(path, callback);\n  return {stop};\n};\n\n/**\n * Instantiates the fsevents interface or binds listeners to an existing one covering\n * the same file tree.\n * @param {Path} path           - to be watched\n * @param {Path} realPath       - real path for symlinks\n * @param {Function} listener   - called when fsevents emits events\n * @param {Function} rawEmitter - passes data to listeners of the 'raw' event\n * @returns {Function} closer\n */\nfunction setFSEventsListener(path, realPath, listener, rawEmitter) {\n  let watchPath = sysPath.extname(realPath) ? sysPath.dirname(realPath) : realPath;\n\n  const parentPath = sysPath.dirname(watchPath);\n  let cont = FSEventsWatchers.get(watchPath);\n\n  // If we've accumulated a substantial number of paths that\n  // could have been consolidated by watching one directory\n  // above the current one, create a watcher on the parent\n  // path instead, so that we do consolidate going forward.\n  if (couldConsolidate(parentPath)) {\n    watchPath = parentPath;\n  }\n\n  const resolvedPath = sysPath.resolve(path);\n  const hasSymlink = resolvedPath !== realPath;\n\n  const filteredListener = (fullPath, flags, info) => {\n    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);\n    if (\n      fullPath === resolvedPath ||\n      !fullPath.indexOf(resolvedPath + sysPath.sep)\n    ) listener(fullPath, flags, info);\n  };\n\n  // check if there is already a watcher on a parent path\n  // modifies `watchPath` to the parent path when it finds a match\n  let watchedParent = false;\n  for (const watchedPath of FSEventsWatchers.keys()) {\n    if (realPath.indexOf(sysPath.resolve(watchedPath) + sysPath.sep) === 0) {\n      watchPath = watchedPath;\n      cont = FSEventsWatchers.get(watchPath);\n      watchedParent = true;\n      break;\n    }\n  }\n\n  if (cont || watchedParent) {\n    cont.listeners.add(filteredListener);\n  } else {\n    cont = {\n      listeners: new Set([filteredListener]),\n      rawEmitter,\n      watcher: createFSEventsInstance(watchPath, (fullPath, flags) => {\n        if (!cont.listeners.size) return;\n        if (flags & FSEVENT_FLAG_MUST_SCAN_SUBDIRS) return;\n        const info = fsevents.getInfo(fullPath, flags);\n        cont.listeners.forEach(list => {\n          list(fullPath, flags, info);\n        });\n\n        cont.rawEmitter(info.event, fullPath, info);\n      })\n    };\n    FSEventsWatchers.set(watchPath, cont);\n  }\n\n  // removes this instance's listeners and closes the underlying fsevents\n  // instance if there are no more listeners left\n  return () => {\n    const lst = cont.listeners;\n\n    lst.delete(filteredListener);\n    if (!lst.size) {\n      FSEventsWatchers.delete(watchPath);\n      if (cont.watcher) return cont.watcher.stop().then(() => {\n        cont.rawEmitter = cont.watcher = undefined;\n        Object.freeze(cont);\n      });\n    }\n  };\n}\n\n// Decide whether or not we should start a new higher-level\n// parent watcher\nconst couldConsolidate = (path) => {\n  let count = 0;\n  for (const watchPath of FSEventsWatchers.keys()) {\n    if (watchPath.indexOf(path) === 0) {\n      count++;\n      if (count >= consolidateThreshhold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n// returns boolean indicating whether fsevents can be used\nconst canUse = () => fsevents && FSEventsWatchers.size < 128;\n\n// determines subdirectory traversal levels from root to path\nconst calcDepth = (path, root) => {\n  let i = 0;\n  while (!path.indexOf(root) && (path = sysPath.dirname(path)) !== root) i++;\n  return i;\n};\n\n// returns boolean indicating whether the fsevents' event info has the same type\n// as the one returned by fs.stat\nconst sameTypes = (info, stats) => (\n  info.type === FSEVENT_TYPE_DIRECTORY && stats.isDirectory() ||\n  info.type === FSEVENT_TYPE_SYMLINK && stats.isSymbolicLink() ||\n  info.type === FSEVENT_TYPE_FILE && stats.isFile()\n)\n\n/**\n * @mixin\n */\nclass FsEventsHandler {\n\n/**\n * @param {import('../index').FSWatcher} fsw\n */\nconstructor(fsw) {\n  this.fsw = fsw;\n}\ncheckIgnored(path, stats) {\n  const ipaths = this.fsw._ignoredPaths;\n  if (this.fsw._isIgnored(path, stats)) {\n    ipaths.add(path);\n    if (stats && stats.isDirectory()) {\n      ipaths.add(path + ROOT_GLOBSTAR);\n    }\n    return true;\n  }\n\n  ipaths.delete(path);\n  ipaths.delete(path + ROOT_GLOBSTAR);\n}\n\naddOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  const event = watchedDir.has(item) ? EV_CHANGE : EV_ADD;\n  this.handleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n}\n\nasync checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  try {\n    const stats = await stat(path)\n    if (this.fsw.closed) return;\n    if (sameTypes(info, stats)) {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  } catch (error) {\n    if (error.code === 'EACCES') {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  }\n}\n\nhandleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  if (this.fsw.closed || this.checkIgnored(path)) return;\n\n  if (event === EV_UNLINK) {\n    const isDirectory = info.type === FSEVENT_TYPE_DIRECTORY\n    // suppress unlink events on never before seen files\n    if (isDirectory || watchedDir.has(item)) {\n      this.fsw._remove(parent, item, isDirectory);\n    }\n  } else {\n    if (event === EV_ADD) {\n      // track new directories\n      if (info.type === FSEVENT_TYPE_DIRECTORY) this.fsw._getWatchedDir(path);\n\n      if (info.type === FSEVENT_TYPE_SYMLINK && opts.followSymlinks) {\n        // push symlinks back to the top of the stack to get handled\n        const curDepth = opts.depth === undefined ?\n          undefined : calcDepth(fullPath, realPath) + 1;\n        return this._addToFsEvents(path, false, true, curDepth);\n      }\n\n      // track new paths\n      // (other than symlinks being followed, which will be tracked soon)\n      this.fsw._getWatchedDir(parent).add(item);\n    }\n    /**\n     * @type {'add'|'addDir'|'unlink'|'unlinkDir'}\n     */\n    const eventName = info.type === FSEVENT_TYPE_DIRECTORY ? event + DIR_SUFFIX : event;\n    this.fsw._emit(eventName, path);\n    if (eventName === EV_ADD_DIR) this._addToFsEvents(path, false, true);\n  }\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} watchPath  - file/dir path to be watched with fsevents\n * @param {String} realPath   - real path (in case of symlinks)\n * @param {Function} transform  - path transformer\n * @param {Function} globFilter - path filter in case a glob pattern was provided\n * @returns {Function} closer for the watcher instance\n*/\n_watchWithFsEvents(watchPath, realPath, transform, globFilter) {\n  if (this.fsw.closed || this.fsw._isIgnored(watchPath)) return;\n  const opts = this.fsw.options;\n  const watchCallback = async (fullPath, flags, info) => {\n    if (this.fsw.closed) return;\n    if (\n      opts.depth !== undefined &&\n      calcDepth(fullPath, realPath) > opts.depth\n    ) return;\n    const path = transform(sysPath.join(\n      watchPath, sysPath.relative(watchPath, fullPath)\n    ));\n    if (globFilter && !globFilter(path)) return;\n    // ensure directories are tracked\n    const parent = sysPath.dirname(path);\n    const item = sysPath.basename(path);\n    const watchedDir = this.fsw._getWatchedDir(\n      info.type === FSEVENT_TYPE_DIRECTORY ? path : parent\n    );\n\n    // correct for wrong events emitted\n    if (wrongEventFlags.has(flags) || info.event === FSEVENT_UNKNOWN) {\n      if (typeof opts.ignored === FUNCTION_TYPE) {\n        let stats;\n        try {\n          stats = await stat(path);\n        } catch (error) {}\n        if (this.fsw.closed) return;\n        if (this.checkIgnored(path, stats)) return;\n        if (sameTypes(info, stats)) {\n          this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        } else {\n          this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        }\n      } else {\n        this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    } else {\n      switch (info.event) {\n      case FSEVENT_CREATED:\n      case FSEVENT_MODIFIED:\n        return this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      case FSEVENT_DELETED:\n      case FSEVENT_MOVED:\n        return this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    }\n  };\n\n  const closer = setFSEventsListener(\n    watchPath,\n    realPath,\n    watchCallback,\n    this.fsw._emitRaw\n  );\n\n  this.fsw._emitReady();\n  return closer;\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} linkPath path to symlink\n * @param {String} fullPath absolute path to the symlink\n * @param {Function} transform pre-existing path transformer\n * @param {Number} curDepth level of subdirectories traversed to where symlink is\n * @returns {Promise<void>}\n */\nasync _handleFsEventsSymlink(linkPath, fullPath, transform, curDepth) {\n  // don't follow the same symlink more than once\n  if (this.fsw.closed || this.fsw._symlinkPaths.has(fullPath)) return;\n\n  this.fsw._symlinkPaths.set(fullPath, true);\n  this.fsw._incrReadyCount();\n\n  try {\n    const linkTarget = await realpath(linkPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(linkTarget)) {\n      return this.fsw._emitReady();\n    }\n\n    this.fsw._incrReadyCount();\n\n    // add the linkTarget for watching with a wrapper for transform\n    // that causes emitted paths to incorporate the link's path\n    this._addToFsEvents(linkTarget || linkPath, (path) => {\n      let aliasedPath = linkPath;\n      if (linkTarget && linkTarget !== DOT_SLASH) {\n        aliasedPath = path.replace(linkTarget, linkPath);\n      } else if (path !== DOT_SLASH) {\n        aliasedPath = sysPath.join(linkPath, path);\n      }\n      return transform(aliasedPath);\n    }, false, curDepth);\n  } catch(error) {\n    if (this.fsw._handleError(error)) {\n      return this.fsw._emitReady();\n    }\n  }\n}\n\n/**\n *\n * @param {Path} newPath\n * @param {fs.Stats} stats\n */\nemitAdd(newPath, stats, processPath, opts, forceAdd) {\n  const pp = processPath(newPath);\n  const isDir = stats.isDirectory();\n  const dirObj = this.fsw._getWatchedDir(sysPath.dirname(pp));\n  const base = sysPath.basename(pp);\n\n  // ensure empty dirs get tracked\n  if (isDir) this.fsw._getWatchedDir(pp);\n  if (dirObj.has(base)) return;\n  dirObj.add(base);\n\n  if (!opts.ignoreInitial || forceAdd === true) {\n    this.fsw._emit(isDir ? EV_ADD_DIR : EV_ADD, pp, stats);\n  }\n}\n\ninitWatch(realPath, path, wh, processPath) {\n  if (this.fsw.closed) return;\n  const closer = this._watchWithFsEvents(\n    wh.watchPath,\n    sysPath.resolve(realPath || wh.watchPath),\n    processPath,\n    wh.globFilter\n  );\n  this.fsw._addPathCloser(path, closer);\n}\n\n/**\n * Handle added path with fsevents\n * @param {String} path file/dir path or glob pattern\n * @param {Function|Boolean=} transform converts working path to what the user expects\n * @param {Boolean=} forceAdd ensure add is emitted\n * @param {Number=} priorDepth Level of subdirectories already traversed.\n * @returns {Promise<void>}\n */\nasync _addToFsEvents(path, transform, forceAdd, priorDepth) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const opts = this.fsw.options;\n  const processPath = typeof transform === FUNCTION_TYPE ? transform : IDENTITY_FN;\n\n  const wh = this.fsw._getWatchHelpers(path);\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      throw null;\n    }\n    if (stats.isDirectory()) {\n      // emit addDir unless this is a glob parent\n      if (!wh.globFilter) this.emitAdd(processPath(path), stats, processPath, opts, forceAdd);\n\n      // don't recurse further if it would exceed depth setting\n      if (priorDepth && priorDepth > opts.depth) return;\n\n      // scan the contents of the dir\n      this.fsw._readdirp(wh.watchPath, {\n        fileFilter: entry => wh.filterPath(entry),\n        directoryFilter: entry => wh.filterDir(entry),\n        ...Depth(opts.depth - (priorDepth || 0))\n      }).on(STR_DATA, (entry) => {\n        // need to check filterPath on dirs b/c filterDir is less restrictive\n        if (this.fsw.closed) {\n          return;\n        }\n        if (entry.stats.isDirectory() && !wh.filterPath(entry)) return;\n\n        const joinedPath = sysPath.join(wh.watchPath, entry.path);\n        const {fullPath} = entry;\n\n        if (wh.followSymlinks && entry.stats.isSymbolicLink()) {\n          // preserve the current depth here since it can't be derived from\n          // real paths past the symlink\n          const curDepth = opts.depth === undefined ?\n            undefined : calcDepth(joinedPath, sysPath.resolve(wh.watchPath)) + 1;\n\n          this._handleFsEventsSymlink(joinedPath, fullPath, processPath, curDepth);\n        } else {\n          this.emitAdd(joinedPath, entry.stats, processPath, opts, forceAdd);\n        }\n      }).on(EV_ERROR, EMPTY_FN).on(STR_END, () => {\n        this.fsw._emitReady();\n      });\n    } else {\n      this.emitAdd(wh.watchPath, stats, processPath, opts, forceAdd);\n      this.fsw._emitReady();\n    }\n  } catch (error) {\n    if (!error || this.fsw._handleError(error)) {\n      // TODO: Strange thing: \"should not choke on an ignored watch path\" will be failed without 2 ready calls -__-\n      this.fsw._emitReady();\n      this.fsw._emitReady();\n    }\n  }\n\n  if (opts.persistent && forceAdd !== true) {\n    if (typeof transform === FUNCTION_TYPE) {\n      // realpath has already been resolved\n      this.initWatch(undefined, path, wh, processPath);\n    } else {\n      let realPath;\n      try {\n        realPath = await realpath(wh.watchPath);\n      } catch (e) {}\n      this.initWatch(realPath, path, wh, processPath);\n    }\n  }\n}\n\n}\n\nmodule.exports = FsEventsHandler;\nmodule.exports.canUse = canUse;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport { exec } from 'child_process';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as chokidar from 'chokidar';\n\nlet fileWatcher: chokidar.FSWatcher | undefined;\nlet latexChecked = false;\nlet latexAvailable = false;\n\nexport function activate(context: vscode.ExtensionContext) {\n    console.log('LaTeX Resume Builder is now active!');\n\n    // Register commands\n    const compileCommand = vscode.commands.registerCommand('resume-builder.compile', compileResume);\n    const previewCommand = vscode.commands.registerCommand('resume-builder.quickPreview', quickPreview);\n    const templateCommand = vscode.commands.registerCommand('resume-builder.insertTemplate', insertTemplate);\n    const openPDFCommand = vscode.commands.registerCommand('resume-builder.openPDF', openPDF);\n\n    // Add to subscriptions\n    context.subscriptions.push(compileCommand, previewCommand, templateCommand, openPDFCommand);\n\n    // Setup auto-compile watcher\n    setupAutoCompile(context);\n\n    // Setup configuration change listener\n    vscode.workspace.onDidChangeConfiguration(e => {\n        if (e.affectsConfiguration('resumeBuilder.autoCompile')) {\n            setupAutoCompile(context);\n        }\n    });\n}\n\nasync function compileResume() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor || !editor.document.fileName.endsWith('.tex')) {\n        vscode.window.showErrorMessage('Please open a .tex file');\n        return;\n    }\n\n    // Auto-save before compile\n    if (editor.document.isDirty) {\n        await editor.document.save();\n    }\n\n    const filePath = editor.document.fileName;\n    const workingDir = path.dirname(filePath);\n    const fileName = path.basename(filePath, '.tex');\n    const config = vscode.workspace.getConfiguration('resumeBuilder');\n    const compiler = config.get('compiler', 'pdflatex');\n\n    await vscode.window.withProgress({\n        location: vscode.ProgressLocation.Notification,\n        title: \"Building Resume PDF...\",\n        cancellable: false\n    }, async (progress) => {\n        return new Promise<void>((resolve, reject) => {\n            const command = `${compiler} -interaction=nonstopmode -halt-on-error \"${path.basename(filePath)}\"`;\n            \n            exec(command, { cwd: workingDir }, (error, stdout, stderr) => {\n                if (error) {\n                    // Parse LaTeX errors for better user experience\n                    const errorMessage = parseLatexError(stderr || stdout || error.message);\n                    vscode.window.showErrorMessage(`Resume compilation failed: ${errorMessage}`);\n                    reject(error);\n                } else {\n                    vscode.window.showInformationMessage(`✅ Resume PDF created: ${fileName}.pdf`);\n                    \n                    // Auto-open PDF if configured\n                    if (config.get('autoOpenPDF', true)) {\n                        openPDFFile(path.join(workingDir, `${fileName}.pdf`));\n                    }\n                    \n                    resolve();\n                }\n            });\n        });\n    });\n}\n\nasync function quickPreview() {\n    await compileResume();\n    await openPDF();\n}\n\nasync function openPDF() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor || !editor.document.fileName.endsWith('.tex')) {\n        vscode.window.showErrorMessage('Please open a .tex file');\n        return;\n    }\n\n    const filePath = editor.document.fileName;\n    const workingDir = path.dirname(filePath);\n    const fileName = path.basename(filePath, '.tex');\n    const pdfPath = path.join(workingDir, `${fileName}.pdf`);\n\n    if (fs.existsSync(pdfPath)) {\n        openPDFFile(pdfPath);\n    } else {\n        vscode.window.showWarningMessage('PDF not found. Compile first!');\n    }\n}\n\nfunction openPDFFile(pdfPath: string) {\n    const platform = process.platform;\n    let command: string;\n\n    switch (platform) {\n        case 'win32':\n            command = `start \"\" \"${pdfPath}\"`;\n            break;\n        case 'darwin':\n            command = `open \"${pdfPath}\"`;\n            break;\n        default:\n            command = `xdg-open \"${pdfPath}\"`;\n    }\n\n    exec(command, (error) => {\n        if (error) {\n            vscode.window.showErrorMessage(`Failed to open PDF: ${error.message}`);\n        }\n    });\n}\n\nfunction insertTemplate() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    const templates = {\n        'Experience Section': `\\\\section{Experience}\n\\\\resumeSubHeadingListStart\n\\\\resumeSubheading\n  {Job Title}{Date Range}\n  {Company Name}{Location}\n  \\\\resumeItemListStart\n    \\\\resumeItem{Achievement or responsibility}\n    \\\\resumeItem{Another achievement with quantified results}\n  \\\\resumeItemListEnd\n\\\\resumeSubHeadingListEnd`,\n\n        'Education Section': `\\\\section{Education}\n\\\\resumeSubHeadingListStart\n\\\\resumeSubheading\n  {Degree Name}{Graduation Date}\n  {University Name}{Location}\n  \\\\resumeItemListStart\n    \\\\resumeItem{GPA: X.X/4.0}\n    \\\\resumeItem{Relevant Coursework: Course1, Course2, Course3}\n  \\\\resumeItemListEnd\n\\\\resumeSubHeadingListEnd`,\n\n        'Skills Section': `\\\\section{Technical Skills}\n\\\\begin{itemize}[leftmargin=0.15in, label={}]\n  \\\\small{\\\\item{\n    \\\\textbf{Languages}{: Python, JavaScript, Java, C++} \\\\\\\\\n    \\\\textbf{Frameworks}{: React, Node.js, Flask, Spring} \\\\\\\\\n    \\\\textbf{Tools}{: Git, Docker, AWS, MySQL}\n  }}\n\\\\end{itemize}`,\n\n        'Project Section': `\\\\section{Projects}\n\\\\resumeSubHeadingListStart\n\\\\resumeProjectHeading\n  {\\\\textbf{Project Name} $|$ \\\\emph{Technologies Used}}{Date}\n  \\\\resumeItemListStart\n    \\\\resumeItem{Description of what the project does}\n    \\\\resumeItem{Technical challenges overcome and results achieved}\n  \\\\resumeItemListEnd\n\\\\resumeSubHeadingListEnd`\n    };\n\n    vscode.window.showQuickPick(Object.keys(templates), {\n        placeHolder: 'Select a resume section template'\n    }).then(selection => {\n        if (selection && templates[selection as keyof typeof templates]) {\n            const template = templates[selection as keyof typeof templates];\n            editor.insertSnippet(new vscode.SnippetString(template));\n        }\n    });\n}\n\nfunction setupAutoCompile(context: vscode.ExtensionContext) {\n    const config = vscode.workspace.getConfiguration('resumeBuilder');\n    const autoCompile = config.get('autoCompile', true);\n\n    // Dispose existing watcher\n    if (fileWatcher) {\n        fileWatcher.close();\n        fileWatcher = undefined;\n    }\n\n    if (autoCompile && vscode.workspace.workspaceFolders) {\n        const workspacePath = vscode.workspace.workspaceFolders[0].uri.fsPath;\n        \n        fileWatcher = chokidar.watch('**/*.tex', {\n            cwd: workspacePath,\n            ignored: /node_modules/,\n            ignoreInitial: true\n        });\n\n        let compileTimeout: NodeJS.Timeout;\n        \n        fileWatcher.on('change', (filePath) => {\n            // Debounce compilation to avoid multiple rapid compilations\n            clearTimeout(compileTimeout);\n            compileTimeout = setTimeout(() => {\n                const fullPath = path.join(workspacePath, filePath);\n                if (vscode.window.activeTextEditor?.document.fileName === fullPath) {\n                    compileResume();\n                }\n            }, 1000);\n        });\n\n        context.subscriptions.push({\n            dispose: () => {\n                if (fileWatcher) {\n                    fileWatcher.close();\n                }\n            }\n        });\n    }\n}\n\nfunction parseLatexError(errorOutput: string): string {\n    // Simple error parsing - can be enhanced\n    const lines = errorOutput.split('\\n');\n    \n    for (const line of lines) {\n        if (line.includes('! ')) {\n            return line.replace('! ', '');\n        }\n        if (line.includes('Error:')) {\n            return line;\n        }\n    }\n    \n    return 'Unknown compilation error. Check the output for details.';\n}\n\nexport function deactivate() {\n    if (fileWatcher) {\n        fileWatcher.close();\n    }\n}\n\n// LaTeX Installation Checking Functions\nasync function checkLatexInstallation(): Promise<void> {\n    if (latexChecked) return;\n    \n    const config = vscode.workspace.getConfiguration('resumeBuilder');\n    const compiler = config.get('compiler', 'pdflatex');\n    \n    try {\n        await checkCompilerAvailable(compiler);\n        latexAvailable = true;\n        console.log(`✅ ${compiler} is available`);\n    } catch (error) {\n        latexAvailable = false;\n        console.log(`❌ ${compiler} is not available`);\n        \n        // Show welcome message with installation guide for new users\n        const result = await vscode.window.showWarningMessage(\n            `LaTeX compiler (${compiler}) not found. Install LaTeX to compile resumes.`,\n            'Install Guide',\n            'Dismiss'\n        );\n        \n        if (result === 'Install Guide') {\n            showInstallGuide();\n        }\n    }\n    \n    latexChecked = true;\n}\n\nfunction checkCompilerAvailable(compiler: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n        exec(`${compiler} --version`, (error, stdout, stderr) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve();\n            }\n        });\n    });\n}\n\nasync function ensureLatexAvailable(): Promise<boolean> {\n    if (!latexChecked) {\n        await checkLatexInstallation();\n    }\n    \n    if (!latexAvailable) {\n        // Re-check in case user installed LaTeX since last check\n        try {\n            const config = vscode.workspace.getConfiguration('resumeBuilder');\n            const compiler = config.get('compiler', 'pdflatex');\n            await checkCompilerAvailable(compiler);\n            latexAvailable = true;\n            return true;\n        } catch (error) {\n            handleMissingLatex();\n            return false;\n        }\n    }\n    \n    return true;\n}\n\nasync function handleMissingLatex(): Promise<void> {\n    const action = await vscode.window.showErrorMessage(\n        'LaTeX compiler not found. Please install LaTeX to compile resumes.',\n        'Install Guide',\n        'Download LaTeX',\n        'Check PATH'\n    );\n    \n    switch (action) {\n        case 'Install Guide':\n            showInstallGuide();\n            break;\n        case 'Download LaTeX':\n            openLatexDownloadPage();\n            break;\n        case 'Check PATH':\n            showPathInstructions();\n            break;\n    }\n}\n\nfunction showInstallGuide(): void {\n    const panel = vscode.window.createWebviewPanel(\n        'latexInstallGuide',\n        'LaTeX Installation Guide',\n        vscode.ViewColumn.One,\n        { enableScripts: false }\n    );\n\n    panel.webview.html = getInstallGuideHTML();\n}\n\nfunction getInstallGuideHTML(): string {\n    const platform = process.platform;\n    let platformInstructions = '';\n    \n    switch (platform) {\n        case 'win32':\n            platformInstructions = `\n                <h3>🪟 Windows Installation</h3>\n                <ol>\n                    <li><strong>Download MiKTeX:</strong> Visit <a href=\"https://miktex.org/download\">miktex.org/download</a></li>\n                    <li><strong>Install:</strong> Run the installer with default settings</li>\n                    <li><strong>Verify:</strong> Open Command Prompt and type: <code>pdflatex --version</code></li>\n                    <li><strong>Restart VS Code</strong> after installation</li>\n                </ol>\n                \n                <h4>Alternative: TeX Live</h4>\n                <ul>\n                    <li>Download from <a href=\"https://tug.org/texlive/windows.html\">tug.org/texlive</a></li>\n                    <li>Larger download but more complete</li>\n                </ul>\n            `;\n            break;\n            \n        case 'darwin':\n            platformInstructions = `\n                <h3>🍎 macOS Installation</h3>\n                <ol>\n                    <li><strong>Download MacTeX:</strong> Visit <a href=\"https://tug.org/mactex/\">tug.org/mactex</a></li>\n                    <li><strong>Install:</strong> Run the .pkg installer (4GB download)</li>\n                    <li><strong>Verify:</strong> Open Terminal and type: <code>pdflatex --version</code></li>\n                    <li><strong>Restart VS Code</strong> after installation</li>\n                </ol>\n                \n                <h4>Alternative: Homebrew</h4>\n                <pre><code>brew install --cask mactex</code></pre>\n                \n                <h4>Lightweight Option: BasicTeX</h4>\n                <pre><code>brew install --cask basictex</code></pre>\n                <p><em>Note: BasicTeX may require additional packages for some resume templates</em></p>\n            `;\n            break;\n            \n        default: // Linux\n            platformInstructions = `\n                <h3>🐧 Linux Installation</h3>\n                \n                <h4>Ubuntu/Debian:</h4>\n                <pre><code>sudo apt-get update\nsudo apt-get install texlive-latex-base texlive-latex-extra</code></pre>\n                \n                <h4>Fedora/RHEL:</h4>\n                <pre><code>sudo dnf install texlive-latex texlive-latex-extra</code></pre>\n                \n                <h4>Arch Linux:</h4>\n                <pre><code>sudo pacman -S texlive-core texlive-latexextra</code></pre>\n                \n                <h4>Verify Installation:</h4>\n                <pre><code>pdflatex --version</code></pre>\n            `;\n            break;\n    }\n\n    return `\n        <!DOCTYPE html>\n        <html>\n        <head>\n            <meta charset=\"UTF-8\">\n            <title>LaTeX Installation Guide</title>\n            <style>\n                body { \n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    padding: 20px;\n                    line-height: 1.6;\n                }\n                h1 { color: #2563eb; }\n                h3 { color: #1d4ed8; }\n                code { \n                    background: #f3f4f6;\n                    padding: 2px 6px;\n                    border-radius: 4px;\n                    font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n                }\n                pre {\n                    background: #f3f4f6;\n                    padding: 12px;\n                    border-radius: 8px;\n                    overflow-x: auto;\n                }\n                .warning {\n                    background: #fef3c7;\n                    border-left: 4px solid #f59e0b;\n                    padding: 12px;\n                    margin: 16px 0;\n                }\n                .success {\n                    background: #d1fae5;\n                    border-left: 4px solid #10b981;\n                    padding: 12px;\n                    margin: 16px 0;\n                }\n            </style>\n        </head>\n        <body>\n            <h1>📄 LaTeX Installation Guide</h1>\n            <p>To use the LaTeX Resume Builder, you need a LaTeX distribution installed on your system.</p>\n            \n            ${platformInstructions}\n            \n            <div class=\"warning\">\n                <strong>⚠️ Important:</strong> After installation, restart VS Code to ensure the LaTeX compiler is recognized.\n            </div>\n            \n            <h3>🧪 Test Your Installation</h3>\n            <ol>\n                <li>Create a new file called <code>test.tex</code></li>\n                <li>Copy this content:</li>\n            </ol>\n            <pre><code>\\\\documentclass{article}\n\\\\begin{document}\nHello, LaTeX!\n\\\\end{document}</code></pre>\n            <ol start=\"3\">\n                <li>Press <code>Ctrl+R</code> (or <code>Cmd+R</code>) to compile</li>\n                <li>If successful, you'll see a PDF!</li>\n            </ol>\n            \n            <div class=\"success\">\n                <strong>✅ Pro Tip:</strong> The extension works with any LaTeX document, not just resumes!\n            </div>\n            \n            <h3>🆘 Need Help?</h3>\n            <ul>\n                <li><strong>PATH Issues:</strong> Make sure LaTeX binaries are in your system PATH</li>\n                <li><strong>Permission Errors:</strong> Try running VS Code as administrator (Windows) or with sudo (Linux)</li>\n                <li><strong>Package Missing:</strong> Install additional packages with your LaTeX distribution's package manager</li>\n            </ul>\n        </body>\n        </html>\n    `;\n}\n\nfunction openLatexDownloadPage(): void {\n    const platform = process.platform;\n    let downloadUrl = 'https://www.latex-project.org/get/';\n    \n    switch (platform) {\n        case 'win32':\n            downloadUrl = 'https://miktex.org/download';\n            break;\n        case 'darwin':\n            downloadUrl = 'https://tug.org/mactex/';\n            break;\n        default:\n            downloadUrl = 'https://tug.org/texlive/';\n            break;\n    }\n    \n    vscode.env.openExternal(vscode.Uri.parse(downloadUrl));\n}\n\nfunction showPathInstructions(): void {\n    const platform = process.platform;\n    let instructions = '';\n    \n    switch (platform) {\n        case 'win32':\n            instructions = `Windows PATH Instructions:\n1. Search for \"Environment Variables\" in Start Menu\n2. Click \"Edit the system environment variables\"\n3. Click \"Environment Variables\" button\n4. Find \"Path\" in System Variables, click \"Edit\"\n5. Add LaTeX bin directory (usually C:\\\\Program Files\\\\MiKTeX\\\\miktex\\\\bin\\\\x64)\n6. Restart VS Code`;\n            break;\n        case 'darwin':\n            instructions = `macOS PATH Instructions:\n1. Open Terminal\n2. Edit your shell profile (~/.zshrc or ~/.bash_profile):\n   echo 'export PATH=\"/usr/local/texlive/2023/bin/universal-darwin:$PATH\"' >> ~/.zshrc\n3. Reload: source ~/.zshrc\n4. Restart VS Code`;\n            break;\n        default:\n            instructions = `Linux PATH Instructions:\n1. Check if LaTeX is installed: which pdflatex\n2. If not in PATH, add to ~/.bashrc or ~/.zshrc:\n   export PATH=\"/usr/local/texlive/2023/bin/x86_64-linux:$PATH\"\n3. Reload: source ~/.bashrc\n4. Restart VS Code`;\n            break;\n    }\n    \n    vscode.window.showInformationMessage(instructions, { modal: true });\n}"],"names":["isGlob","pathPosixDirname","dirname","isWin32","backslash","enclosure","globby","escaped","module","exports","str","opts","Object","assign","flipBackslashes","indexOf","replace","test","require","util","toRegexRange","isObject","val","Array","isArray","isValidValue","value","isNumber","num","Number","isInteger","zeros","input","index","slice","pad","maxLength","toNumber","dash","padStart","String","toMaxLen","negative","length","toRange","a","b","isNumbers","options","wrap","start","fromCharCode","toRegex","end","prefix","capture","join","rangeError","args","RangeError","inspect","invalidRange","strictRanges","fill","step","transform","descending","startString","endString","stepString","Math","max","abs","padded","maxLen","stringify","format","parts","negatives","positives","push","range","sort","result","map","v","toSequence","fillNumbers","charCodeAt","min","fillLetters","TypeError","invalidStep","relaxZeros","strictZeros","cacheKey","shorthand","cache","hasOwnProperty","isPadded","hasPadding","state","splitToPatterns","neg","pos","onlyNegative","filterPatterns","onlyPositive","intersected","concat","collatePatterns","rangeToPattern","stop","pattern","count","digits","zipped","arr","i","zip","startDigit","stopDigit","toCharacterClass","tok","prev","ranges","nines","countNines","stops","Set","add","countZeros","compare","splitToRanges","tokens","obj","padZeros","string","toQuantifier","pop","comparison","intersection","ele","contains","key","some","len","repeat","integer","pow","diff","relax","clearCache","fs","Readable","sysPath","promisify","picomatch","readdir","stat","lstat","realpath","RECURSIVE_ERROR_CODE","NORMAL_FLOW_ERRORS","FILE_TYPE","DIR_TYPE","FILE_DIR_TYPE","EVERYTHING_TYPE","ALL_TYPES","maj","process","versions","node","split","n","parseInt","wantBigintFsStats","platform","normalizeFilter","filter","undefined","glob","trim","entry","basename","positive","item","trimmed","charAt","f","ReaddirpStream","defaultOptions","root","fileFilter","path","directoryFilter","type","depth","alwaysStat","constructor","super","objectMode","autoDestroy","highWaterMark","this","_fileFilter","_directoryFilter","statMethod","_stat","bigint","_maxDepth","_wantsDir","includes","_wantsFile","_wantsEverything","_root","resolve","_isDirent","_statsProp","_rdOptions","encoding","withFileTypes","parents","_exploreDir","reading","parent","_read","batch","destroyed","files","splice","dirent","_formatEntry","Promise","all","entryType","_getEntryType","fullPath","_includeAsFile","error","destroy","_onError","name","relative","err","has","code","emit","stats","isFile","isDirectory","isSymbolicLink","full","entryRealPath","entryRealPathStats","startsWith","substr","sep","recursiveError","Error","readdirp","promise","reject","on","default","stripTrailing","ch","segs","isBinaryPath","isWindows","isLinux","EMPTY_FN","EMPTY_STR","KEY_LISTENERS","KEY_ERR","KEY_RAW","HANDLER_KEYS","EV_CHANGE","EV_ADD","EV_ADD_DIR","EV_ERROR","STR_DATA","STR_END","BRACE_START","STAR","open","close","fsrealpath","statMethods","foreach","fn","forEach","addAndConvert","main","prop","container","delFromSet","delete","isEmptySet","size","FsWatchInstances","Map","createFsWatchInstance","listener","errHandler","emitRaw","handleEvent","rawEvent","evPath","watchedPath","fsWatchBroadcast","watch","val1","val2","val3","cont","get","FsWatchFileInstances","fsW","fsw","_boundHandleError","_handleError","_watchWithNodeFs","directory","_getWatchedDir","absolutePath","persistent","closer","usePolling","interval","enableBinaryInterval","binaryInterval","handlers","rawEmitter","listeners","rawEmitters","copts","unwatchFile","watcher","watchFile","curr","currmtime","mtimeMs","set","freeze","setFsWatchFileListener","_emitRaw","bind","async","broadcastErr","watcherUnusable","fd","errHandlers","clear","clearItem","setFsWatchListener","_handleFile","file","initialAdd","closed","prevStats","newStats","_throttle","at","atimeMs","mt","_emit","ino","_closeFile","_addPathCloser","_remove","ignoreInitial","_isntIgnored","_handleSymlink","dir","followSymlinks","linkPath","_incrReadyCount","e","_emitReady","_symlinkPaths","_handleRead","wh","target","throttler","hasGlob","previous","current","stream","_readdirp","filterPath","filterDir","_addToNodeFs","once","wasThrottled","getChildren","_handleDir","parentDir","tracked","globFilter","oDepth","dirPath","priorWh","ready","_isIgnored","_getWatchHelpers","watchPath","follow","absPath","targetPath","constants","utils","MAX_LENGTH","POSIX_REGEX_SOURCE","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REPLACEMENTS","expandRange","RegExp","ex","escapeRegex","syntaxError","char","parse","SyntaxError","bos","output","prepend","win32","PLATFORM_CHARS","globChars","EXTGLOB_CHARS","extglobChars","DOT_LITERAL","PLUS_LITERAL","SLASH_LITERAL","ONE_CHAR","DOTS_SLASH","NO_DOT","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK","QMARK_NO_DOT","START_ANCHOR","globstar","dot","nodot","qmarkNoDot","star","bash","noext","noextglob","consumed","backtrack","negated","brackets","braces","parens","quotes","removePrefix","extglobs","stack","eos","peek","advance","remaining","consume","append","token","negate","increment","decrement","isBrace","isExtglob","extglob","inner","extglobOpen","conditions","extglobClose","rest","extglobStar","expression","fastpaths","negatedExtglob","backslashes","m","esc","chars","first","unescape","wrapOutput","next","match","exec","slashes","posix","idx","lastIndexOf","pre","keepQuotes","strictBrackets","nobracket","prevValue","literalBrackets","hasRegexChars","nobrace","outputIndex","tokensIndex","brace","dots","unshift","comma","out","toks","t","supportsLookbehinds","nonegate","regex","noglobstar","prior","before","isStart","afterStar","after","strictSlashes","escapeLast","suffix","NO_DOTS","slashDot","create","source","EventEmitter","anymatch","globParent","normalizePath","NodeFsHandler","FsEventsHandler","EV_ALL","EV_READY","EV_UNLINK","EV_UNLINK_DIR","EV_RAW","STR_CLOSE","BACK_SLASH_RE","DOUBLE_SLASH_RE","SLASH_OR_BACK_SLASH_RE","DOT_RE","REPLACER_RE","SLASH","SLASH_SLASH","BANG","ONE_DOT","TWO_DOTS","GLOBSTAR","SLASH_GLOBSTAR","ANYMATCH_OPTS","STRING_TYPE","FUNCTION_TYPE","isMacos","isIBMi","arrify","flatten","list","unifyPaths","paths_","paths","every","p","normalizePathToUnix","toUnix","normalize","normalizeIgnored","cwd","isAbsolute","undef","DirEntry","removeWatcher","_removeWatcher","items","remove","values","dispose","WatchHelper","fullWatchPath","globSymlink","dirParts","getDirParts","checkGlobSymlink","fullParentDir","realPath","entryPath","resolvedPath","_hasReadPermissions","expand","entryParts","unmatchedGlob","part","FSWatcher","_opts","_watched","_closers","_ignoredPaths","_throttled","_streams","ignorePermissionErrors","disableGlobbing","useFsEvents","canUse","envPoll","env","CHOKIDAR_USEPOLLING","envLower","toLowerCase","envInterval","CHOKIDAR_INTERVAL","atomic","_pendingUnlinks","awaitWriteFinish","awf","stabilityThreshold","pollInterval","_pendingWrites","ignored","readyCalls","_readyCount","_readyEmitted","nextTick","_fsEventsHandler","_nodeFsHandler","_origAdd","_internal","getAbsolutePath","_userIgnored","_addToFsEvents","res","then","results","unwatch","_closePath","_closePromise","removeAllListeners","closers","closerList","getWatched","watchList","emitWithAll","event","pw","lastChange","Date","setTimeout","awfEmit","_awaitWriteFinish","actionType","timeout","action","actionPath","timeoutObject","clearTimeout","thr","threshold","timeoutHandler","now","prevStat","curStat","cancelWait","_getGlobIgnored","ign","_boundRemove","st","mode","it","toString","Boolean","nested","wasTracked","relPath","eventName","os","FSEVENT_CREATED","FSEVENT_MODIFIED","FSEVENT_DELETED","FSEVENT_MOVED","FSEVENT_CLONED","FSEVENT_UNKNOWN","FSEVENT_FLAG_MUST_SCAN_SUBDIRS","FSEVENT_TYPE_FILE","FSEVENT_TYPE_DIRECTORY","FSEVENT_TYPE_SYMLINK","DOT_SLASH","ROOT_GLOBSTAR","DIR_SUFFIX","IDENTITY_FN","REGEX_BACKSLASH","REGEX_REMOVE_BACKSLASH","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_GLOBAL","isRegexChar","toPosixSlashes","removeBackslashes","version","windows","lastIdx","strictCheck","pipeIndex","closeSquareIndex","closeCurlyIndex","closeParenIndex","backSlashIndex","relaxedCheck","check","strict","compile","nodupes","noempty","defineProperty","DEFAULT_OPTIONS","returnIndex","matchPatterns","patterns","negPatterns","isList","_path","prototype","call","nglob","applied","matchers","testString","mtchers","negatedGlobs","matcher","createPattern","ri","CHAR_BACKSLASH","CHAR_BACKTICK","CHAR_COMMA","CHAR_DOT","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_LEFT_CURLY_BRACE","CHAR_RIGHT_CURLY_BRACE","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_DOUBLE_QUOTE","CHAR_SINGLE_QUOTE","CHAR_NO_BREAK_SPACE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","ast","nodes","block","dollar","commas","shift","siblings","invalid","keepEscaping","isOpen","isClose","CHAR_ASTERISK","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_EXCLAMATION_MARK","CHAR_FORWARD_SLASH","CHAR_PLUS","CHAR_QUESTION_MARK","isPathSeparator","isPrefix","isGlobstar","Infinity","scanToEnd","lastIndex","isBracket","braceEscaped","finished","noparen","base","maxDepth","prevIndex","find","exceedsLimit","limit","escapeNode","encloseBrace","isInvalidBrace","isOpenOrClose","reduce","acc","flat","scan","returnState","fns","arrayMatcher","isMatch","isState","compileRe","makeRe","isIgnored","ignore","ignoreOpts","onMatch","onResult","returnObject","onIgnore","matchBase","returnOutput","parsed","flags","nocase","debug","queue","stash","enclose","rangeLimit","walk","q","child","invalidBlock","invalidNode","escapeInvalid","console","log","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_AMPERSAND","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_DOLLAR","CHAR_EQUAL","CHAR_FORM_FEED","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LINE_FEED","CHAR_PERCENT","CHAR_RIGHT_ANGLE_BRACKET","CHAR_SEMICOLON","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","binaryExtensions","extensions","filePath","extname","isFinite","WIN_SLASH","WIN_NO_SLASH","END_ANCHOR","POSIX_CHARS","QMARK_LITERAL","WINDOWS_CHARS","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","CHAR_GRAVE_ACCENT","SEP","fsevents","CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR","mtch","FSEventsWatchers","wrongEventFlags","createFSEventsInstance","callback","calcDepth","sameTypes","info","checkIgnored","ipaths","addOrChange","watchedDir","checkExists","curDepth","_watchWithFsEvents","parentPath","keys","couldConsolidate","hasSymlink","filteredListener","watchedParent","getInfo","lst","setFSEventsListener","_handleFsEventsSymlink","linkTarget","aliasedPath","emitAdd","newPath","processPath","forceAdd","pp","isDir","dirObj","initWatch","priorDepth","isNaN","joinedPath","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","fileWatcher","compileResume","editor","vscode","window","activeTextEditor","document","fileName","endsWith","showErrorMessage","isDirty","save","workingDir","config","workspace","getConfiguration","compiler","withProgress","location","ProgressLocation","Notification","title","cancellable","progress","command","stdout","stderr","errorMessage","errorOutput","lines","line","parseLatexError","message","showInformationMessage","openPDFFile","quickPreview","openPDF","pdfPath","existsSync","showWarningMessage","insertTemplate","templates","showQuickPick","placeHolder","selection","template","insertSnippet","SnippetString","setupAutoCompile","context","autoCompile","workspaceFolders","workspacePath","uri","fsPath","compileTimeout","chokidar","subscriptions","compileCommand","commands","registerCommand","previewCommand","templateCommand","openPDFCommand","onDidChangeConfiguration","affectsConfiguration"],"sourceRoot":""}